name: build npm-lib

env:
  NPMRC: ${{ secrets.NPMRC }}

on:
  workflow_call:
    inputs:
      ENVIRONMENT:
          required: true
          type: string
      MICROSERVICE_NAME:
          required: true
          type: string
      EXPORT_MODULE:
          required: false
          type: string
      DOWNLOAD_FILE:
          required: false
          type: string
      DOWNLOAD_PATH:
          required: false
          type: string
      NPM_ARTIFACT_PATH:
          required: true
          type: string
  
jobs:
  build:
    runs-on: ubuntu-latest
    environment: ${{ inputs.ENVIRONMENT }}
    name: Build and upload NPM
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'adopt'

      - name: Set up nodejs
        uses: actions/setup-node@v4
        with:
          node-version: 14

      #NOTE: necessary to build client-war 
      - name: Add .npmrc file
        run: echo -e $NPMRC > ~/.npmrc

      - name: download files from other jobs
        if: ${{ inputs.DOWNLOAD_FILE }}
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.DOWNLOAD_FILE}}
          path: ${{ inputs.DOWNLOAD_PATH}}
      
      - name:
        run: |
          cd ${{ inputs.MICROSERVICE_NAME }}/${{ inputs.MICROSERVICE_NAME }}/src/main/angular 
          npm install
          npm run generate
          npm run build
          cd dist/${{ inputs.EXPORT_MODULE }}
          npm pack

      - name: Extract version number
        id: getVersion
        run: |
          export VERSION_NUMBER=$(grep -Po -m 1 '(?<=<version>)[0-9\.]+'  ${{ inputs.MICROSERVICE_NAME }}/pom.xml )
          echo "VERSION_NUMBER=$VERSION_NUMBER" >> $GITHUB_OUTPUT

      - name: upload module
        uses: actions/upload-artifact@v4
        with:
          name: ${{inputs.EXPORT_MODULE}}-${{ steps.getVersion.outputs.VERSION_NUMBER }}.tgz
          path: ${{ inputs.MICROSERVICE_NAME }}/${{ inputs.MICROSERVICE_NAME }}/src/main/angular/dist/${{ inputs.EXPORT_MODULE }}/cirras-${{ inputs.EXPORT_MODULE}}-0.0.0.tgz

      - name: Setup artifactory
        uses: jfrog/setup-jfrog-cli@v4

      - name: Push Build to Artifactory
        run: |
          mv ${{ inputs.MICROSERVICE_NAME }}/${{ inputs.MICROSERVICE_NAME }}/src/main/angular/dist/${{ inputs.EXPORT_MODULE }}/cirras-${{ inputs.EXPORT_MODULE}}-0.0.0.tgz  cirras-${{ inputs.EXPORT_MODULE}}-$VERSION_NUMBER.tgz
          export BUILD_NAME="cirras-${{ inputs.EXPORT_MODULE}}-$VERSION_NUMBER"
          export BUILD_MODULE="${{ inputs.EXPORT_MODULE}}"
          
          jf rt upload  --url ${{ vars.ARTIFACTORY_URL }} --user ${{ secrets.OPENSHIFT_ACCOUNT }} --password ${{ secrets.OPENSHIFT_PASSWORD }} --build-name $BUILD_NAME --module $BUILD_MODULE "cirras-${{ inputs.EXPORT_MODULE}}-$VERSION_NUMBER.tgz" ${{ vars.NPM_REPO }}/${{ inputs.NPM_ARTIFACT_PATH}}/${{inputs.EXPORT_MODULE}}.tgz
          
