{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "CIRRAS Underwriting V1 API",
    "version" : "3.2.0-SNAPSHOT"
  },
  "paths" : {
    "/annualFieldDetail" : {
      "get" : {
        "summary" : "Get an annual field detail",
        "operationId" : "Get an annual field detail",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "annualFieldDetailId",
          "in" : "query",
          "description" : "The id of the annual field detail in CIRRAS.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "ETag" : {
                "description" : "The ETag response-header field provides the current value of the entity tag for the requested variant.",
                "style" : "simple"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnnualFieldDetailRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnnualFieldDetailRsrc"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.GET_LAND" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      },
      "post" : {
        "summary" : "Insert or Update an annual field detai table record",
        "operationId" : "Insert or Update an annual field detail table record",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The annualFieldDetail resource containing the values from CIRRAS.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AnnualFieldDetailRsrc"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/AnnualFieldDetailRsrc"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "409" : {
            "description" : "Conflict",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          },
          "412" : {
            "description" : "Precondition Failed"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.UPDATE_SYNC_UNDERWRITING" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      },
      "delete" : {
        "summary" : "Delete an annual field detail table record",
        "operationId" : "Delete an annual field detail table record",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "The If-Match request-header must match the current eTag of the resource or the request will fail.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "annualFieldDetailId",
          "in" : "query",
          "description" : "The id of the annual field detail in CIRRAS.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "409" : {
            "description" : "Conflict"
          },
          "412" : {
            "description" : "Precondition Failed"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.DELETE_SYNC_UNDERWRITING" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      }
    },
    "/annualFields" : {
      "get" : {
        "summary" : "Get list of annual fields.",
        "operationId" : "Get list of annual fields.",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "legalLandId",
          "in" : "query",
          "description" : "Filter the results by the legal land id",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fieldId",
          "in" : "query",
          "description" : "Filter the results by the field id",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cropYear",
          "in" : "query",
          "description" : "Crop year of the policy",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "ETag" : {
                "description" : "The ETag response-header field provides the current value of the entity tag for the requested variant.",
                "style" : "simple"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnnualFieldListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnnualFieldListRsrc"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.SEARCH_ANNUAL_FIELDS" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      }
    },
    "/annualField/{fieldId}/rolloverInventory" : {
      "get" : {
        "summary" : "Rollover a inventory for a field from the previous crop year",
        "operationId" : "Rollover the inventory for a field.",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fieldId",
          "in" : "path",
          "description" : "The id of the field in CIRRAS.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "rolloverToCropYear",
          "in" : "query",
          "description" : "The crop year to rollover the inventory to",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "insurancePlanId",
          "in" : "query",
          "description" : "Insurance plan of the policy",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "ETag" : {
                "description" : "The ETag response-header field provides the current value of the entity tag for the requested variant.",
                "style" : "simple"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnnualFieldRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnnualFieldRsrc"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.CREATE_INVENTORY_CONTRACT" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      }
    },
    "/commodityTypeCodes" : {
      "get" : {
        "summary" : "Get a list of commodity types",
        "operationId" : "Get a list of commodity types",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "insurancePlanId",
          "in" : "query",
          "description" : "Filter the results by the insurance plan",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "ETag" : {
                "description" : "The ETag response-header field provides the current value of the entity tag for the requested variant.",
                "style" : "simple"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommodityTypeCodeListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommodityTypeCodeListRsrc"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.GET_CODE_TABLES" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      }
    },
    "/contactemail" : {
      "get" : {
        "summary" : "Get a Contact Email",
        "operationId" : "Get a Contact Email",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "contactEmailId",
          "in" : "query",
          "description" : "The id of the Contact Email in CIRRAS.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "ETag" : {
                "description" : "The ETag response-header field provides the current value of the entity tag for the requested variant.",
                "style" : "simple"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ContactEmailRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ContactEmailRsrc"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.GET_CONTACT_EMAIL" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      },
      "post" : {
        "summary" : "Insert or Update a Contact Email table record",
        "operationId" : "Insert or Update a Contact Email table record",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The Contact Email resource containing the values from CIRRAS.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ContactEmailRsrc"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ContactEmailRsrc"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "409" : {
            "description" : "Conflict",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          },
          "412" : {
            "description" : "Precondition Failed"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.UPDATE_SYNC_UNDERWRITING" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      },
      "delete" : {
        "summary" : "Delete Contact Email table record",
        "operationId" : "Delete Contact Email table record",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "The If-Match request-header must match the current eTag of the resource or the request will fail.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "contactEmailId",
          "in" : "query",
          "description" : "The id of the Contact Email in CIRRAS.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "409" : {
            "description" : "Conflict"
          },
          "412" : {
            "description" : "Precondition Failed"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.DELETE_SYNC_UNDERWRITING" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      }
    },
    "/contact" : {
      "get" : {
        "summary" : "Get a Contact",
        "operationId" : "Get a Contact",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "contactId",
          "in" : "query",
          "description" : "The id of the Contact in CIRRAS.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "ETag" : {
                "description" : "The ETag response-header field provides the current value of the entity tag for the requested variant.",
                "style" : "simple"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ContactRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ContactRsrc"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.GET_CONTACT" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      },
      "post" : {
        "summary" : "Insert or Update a Contact table record",
        "operationId" : "Insert or Update a Contact table record",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The contact resource containing the values from CIRRAS.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ContactRsrc"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ContactRsrc"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "409" : {
            "description" : "Conflict",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          },
          "412" : {
            "description" : "Precondition Failed"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.UPDATE_SYNC_UNDERWRITING" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      },
      "delete" : {
        "summary" : "Delete Contact table record",
        "operationId" : "Delete Contact table record",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "The If-Match request-header must match the current eTag of the resource or the request will fail.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "contactId",
          "in" : "query",
          "description" : "The id of the Contact in CIRRAS.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "409" : {
            "description" : "Conflict"
          },
          "412" : {
            "description" : "Precondition Failed"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.DELETE_SYNC_UNDERWRITING" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      }
    },
    "/contactphone" : {
      "get" : {
        "summary" : "Get a Contact Phone",
        "operationId" : "Get a Contact Phone",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "contactPhoneId",
          "in" : "query",
          "description" : "The id of the Contact Phone in CIRRAS.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "ETag" : {
                "description" : "The ETag response-header field provides the current value of the entity tag for the requested variant.",
                "style" : "simple"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ContactPhoneRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ContactPhoneRsrc"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.GET_CONTACT_PHONE" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      },
      "post" : {
        "summary" : "Insert or Update a Contact Phone table record",
        "operationId" : "Insert or Update a Contact Phone table record",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The Contact Phone resource containing the values from CIRRAS.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ContactPhoneRsrc"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ContactPhoneRsrc"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "409" : {
            "description" : "Conflict",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          },
          "412" : {
            "description" : "Precondition Failed"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.UPDATE_SYNC_UNDERWRITING" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      },
      "delete" : {
        "summary" : "Delete Contact Phone table record",
        "operationId" : "Delete Contact Phone table record",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "The If-Match request-header must match the current eTag of the resource or the request will fail.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "contactPhoneId",
          "in" : "query",
          "description" : "The id of the Contact Phone in CIRRAS.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "409" : {
            "description" : "Conflict"
          },
          "412" : {
            "description" : "Precondition Failed"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.DELETE_SYNC_UNDERWRITING" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      }
    },
    "/contractedFieldDetail" : {
      "get" : {
        "summary" : "Get an contracted field detail",
        "operationId" : "Get an contracted field detail",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "contractedFieldDetailId",
          "in" : "query",
          "description" : "The id of the contracted field detail in CIRRAS.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "ETag" : {
                "description" : "The ETag response-header field provides the current value of the entity tag for the requested variant.",
                "style" : "simple"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ContractedFieldDetailRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ContractedFieldDetailRsrc"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.GET_LAND" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      },
      "post" : {
        "summary" : "Insert or Update an contracted field detai table record",
        "operationId" : "Insert or Update an contracted field detail table record",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The contractedLotDetail resource containing the values from CIRRAS.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ContractedFieldDetailRsrc"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ContractedFieldDetailRsrc"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "409" : {
            "description" : "Conflict",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          },
          "412" : {
            "description" : "Precondition Failed"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.UPDATE_SYNC_UNDERWRITING" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      },
      "delete" : {
        "summary" : "Delete an contracted field detail table record",
        "operationId" : "Delete an contracted field detail table record",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "The If-Match request-header must match the current eTag of the resource or the request will fail.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "contractedFieldDetailId",
          "in" : "query",
          "description" : "The id of the contracted field detail in CIRRAS.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "409" : {
            "description" : "Conflict"
          },
          "412" : {
            "description" : "Precondition Failed"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.DELETE_SYNC_UNDERWRITING" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      }
    },
    "/cropcommodities" : {
      "get" : {
        "summary" : "Get list of crop commodities.",
        "operationId" : "Get list of crop commodities.",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "insurancePlanId",
          "in" : "query",
          "description" : "Filter the results by the insurance plan",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cropYear",
          "in" : "query",
          "description" : "Filter the results by the year",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "commodityType",
          "in" : "query",
          "description" : "Filter the results by the type of commodity (NULL = all, INV = Inventory, YLD = Yield, UW = Underwriting",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "loadChildren",
          "in" : "query",
          "description" : "Y = load child table records, N = don't load them",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "ETag" : {
                "description" : "The ETag response-header field provides the current value of the entity tag for the requested variant.",
                "style" : "simple"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CropCommodityListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CropCommodityListRsrc"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "GETTOPLEVEL" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      }
    },
    "/cropVarietyInsurabilities" : {
      "get" : {
        "summary" : "Get a list of crop variety insurabilities",
        "operationId" : "Get a list of crop variety insurabilities",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "insurancePlanId",
          "in" : "query",
          "description" : "Filter the results by the insurance plan",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "loadForEdit",
          "in" : "query",
          "description" : "True if the list is loaded for edit. Checks are run",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "ETag" : {
                "description" : "The ETag response-header field provides the current value of the entity tag for the requested variant.",
                "style" : "simple"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CropVarietyInsurabilityListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CropVarietyInsurabilityListRsrc"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.GET_CROP_VARIETY_INSURABILITIES" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      },
      "put" : {
        "summary" : "Save a list of crop variety insurabilities",
        "operationId" : "Save a list of crop variety insurabilities",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "The If-Match request-header must match the current eTag of the resource or the request will fail.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "insurancePlanId",
          "in" : "query",
          "description" : "Filter the results by the insurance plan",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "loadForEdit",
          "in" : "query",
          "description" : "True if the list is loaded for edit. Checks are run",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Resource with a list of crop variety insurabilities to be saved",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CropVarietyInsurabilityListRsrc"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/CropVarietyInsurabilityListRsrc"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "ETag" : {
                "description" : "The ETag response-header field provides the current value of the entity tag for the requested variant.",
                "style" : "simple"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CropVarietyInsurabilityListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CropVarietyInsurabilityListRsrc"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "409" : {
            "description" : "Conflict",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          },
          "412" : {
            "description" : "Precondition Failed"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.SAVE_CROP_VARIETY_INSURABILITIES" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      }
    },
    "/dopYieldContracts/{declaredYieldContractGuid}" : {
      "get" : {
        "summary" : "Get the dop yield contract",
        "operationId" : "Get the dop yield contract.",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "declaredYieldContractGuid",
          "in" : "path",
          "description" : "The GUID of the dop yield contract.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "ETag" : {
                "description" : "The ETag response-header field provides the current value of the entity tag for the requested variant.",
                "style" : "simple"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DopYieldContractRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DopYieldContractRsrc"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.GET_DOP_YIELD_CONTRACT" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      },
      "put" : {
        "summary" : "Update dop yield contract",
        "operationId" : "Update dop yield contract",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "The If-Match request-header must match the current eTag of the resource or the request will fail.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "declaredYieldContractGuid",
          "in" : "path",
          "description" : "The GUID of the dop yield contract resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The dop yield contract resource containing the new values.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DopYieldContractRsrc"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/DopYieldContractRsrc"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "ETag" : {
                "description" : "The ETag response-header field provides the current value of the entity tag for the requested variant.",
                "style" : "simple"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DopYieldContractRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DopYieldContractRsrc"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "409" : {
            "description" : "Conflict",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          },
          "412" : {
            "description" : "Precondition Failed"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.UPDATE_DOP_YIELD_CONTRACT" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      },
      "delete" : {
        "summary" : "Delete dop yield contract",
        "operationId" : "Delete dop yield contract",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "The If-Match request-header must match the current eTag of the resource or the request will fail.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "declaredYieldContractGuid",
          "in" : "path",
          "description" : "The GUID of the dop yield contract resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "409" : {
            "description" : "Conflict"
          },
          "412" : {
            "description" : "Precondition Failed"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.DELETE_DOP_YIELD_CONTRACT" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      }
    },
    "/dopYieldContracts" : {
      "post" : {
        "summary" : "Add a new dop yield contract",
        "operationId" : "Add a new dop yield contract",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The dop yield contract resource containing the new values.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DopYieldContractRsrc"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/DopYieldContractRsrc"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "headers" : {
              "ETag" : {
                "description" : "The ETag response-header field provides the current value of the entity tag for the requested variant.",
                "style" : "simple"
              },
              "Location" : {
                "description" : "The Location response-header field is used to redirect the recipient to a location other than the Request-URI for completion of the request or identification of a new resource.",
                "style" : "simple"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DopYieldContractRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DopYieldContractRsrc"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.CREATE_DOP_YIELD_CONTRACT" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      }
    },
    "/dopYieldContracts/report" : {
      "get" : {
        "summary" : "Generate the dop report",
        "operationId" : "Generate the dop report.",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cropYear",
          "in" : "query",
          "description" : "Filter the results by the year",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "insurancePlanId",
          "in" : "query",
          "description" : "Filter the results by the insurance plan",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "officeId",
          "in" : "query",
          "description" : "Filter the results by the office",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "policyStatusCode",
          "in" : "query",
          "description" : "Filter the results by the policy status",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "policyNumber",
          "in" : "query",
          "description" : "Filter the results by the policy number",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "growerInfo",
          "in" : "query",
          "description" : "Filter the results by the grower info (Name, Number, Phone, Email",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sortColumn",
          "in" : "query",
          "description" : "Sort by column",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "policyIds",
          "in" : "query",
          "description" : "IDs of policies to be included",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "ETag" : {
                "description" : "The ETag response-header field provides the current value of the entity tag for the requested variant.",
                "style" : "simple"
              }
            },
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.PRINT_DOP_YIELD_CONTRACT" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      }
    },
    "/field" : {
      "get" : {
        "summary" : "Get a field",
        "operationId" : "Get a field",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fieldId",
          "in" : "query",
          "description" : "The id of the field in CIRRAS.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "ETag" : {
                "description" : "The ETag response-header field provides the current value of the entity tag for the requested variant.",
                "style" : "simple"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FieldRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FieldRsrc"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.GET_LAND" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      },
      "post" : {
        "summary" : "Insert or Update a field table record",
        "operationId" : "Insert or Update a field table record",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The field resource containing the values from CIRRAS.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/FieldRsrc"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/FieldRsrc"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "409" : {
            "description" : "Conflict",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          },
          "412" : {
            "description" : "Precondition Failed"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.UPDATE_SYNC_UNDERWRITING" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      },
      "delete" : {
        "summary" : "Delete field table record",
        "operationId" : "Delete field table record",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "The If-Match request-header must match the current eTag of the resource or the request will fail.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fieldId",
          "in" : "query",
          "description" : "The id of the field in CIRRAS.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "409" : {
            "description" : "Conflict"
          },
          "412" : {
            "description" : "Precondition Failed"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.DELETE_SYNC_UNDERWRITING" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      }
    },
    "/gradeModifiers" : {
      "get" : {
        "summary" : "Get a list of grade modifiers",
        "operationId" : "Get a list of grade modifiers",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cropYear",
          "in" : "query",
          "description" : "Filter the results by crop year",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "insurancePlanId",
          "in" : "query",
          "description" : "Filter the results by the insurance plan",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cropCommodityId",
          "in" : "query",
          "description" : "Filter the results by the commodity",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "ETag" : {
                "description" : "The ETag response-header field provides the current value of the entity tag for the requested variant.",
                "style" : "simple"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GradeModifierListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GradeModifierListRsrc"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.GET_GRADE_MODIFIERS" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      },
      "put" : {
        "summary" : "Save a list of grade modifiers",
        "operationId" : "Save a list of grade modifiers",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "The If-Match request-header must match the current eTag of the resource or the request will fail.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cropYear",
          "in" : "query",
          "description" : "Filter the results by crop year",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "insurancePlanId",
          "in" : "query",
          "description" : "Filter the results by the insurance plan",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cropCommodityId",
          "in" : "query",
          "description" : "Filter the results by the commodity",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Resource with a list of grade modifiers to be saved",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GradeModifierListRsrc"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/GradeModifierListRsrc"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "ETag" : {
                "description" : "The ETag response-header field provides the current value of the entity tag for the requested variant.",
                "style" : "simple"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GradeModifierListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GradeModifierListRsrc"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "409" : {
            "description" : "Conflict",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          },
          "412" : {
            "description" : "Precondition Failed"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.SAVE_GRADE_MODIFIERS" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      }
    },
    "/gradeModifierTypes" : {
      "get" : {
        "summary" : "Get a list of grade modifier types",
        "operationId" : "Get a list of grade modifier types",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cropYear",
          "in" : "query",
          "description" : "Filter the results by crop year",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "ETag" : {
                "description" : "The ETag response-header field provides the current value of the entity tag for the requested variant.",
                "style" : "simple"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GradeModifierTypeListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GradeModifierTypeListRsrc"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.GET_GRADE_MODIFIERS" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      },
      "put" : {
        "summary" : "Save a list of grade modifier types",
        "operationId" : "Save a list of grade modifier types",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "The If-Match request-header must match the current eTag of the resource or the request will fail.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cropYear",
          "in" : "query",
          "description" : "Filter the results by crop year",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Resource with a list of grade modifier types to be saved",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GradeModifierTypeListRsrc"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/GradeModifierTypeListRsrc"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "ETag" : {
                "description" : "The ETag response-header field provides the current value of the entity tag for the requested variant.",
                "style" : "simple"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GradeModifierTypeListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GradeModifierTypeListRsrc"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "409" : {
            "description" : "Conflict",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          },
          "412" : {
            "description" : "Precondition Failed"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.SAVE_GRADE_MODIFIERS" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      }
    },
    "/growercontact" : {
      "get" : {
        "summary" : "Get a Grower Contact",
        "operationId" : "Get a Grower Contact",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "growerContactId",
          "in" : "query",
          "description" : "The id of the Grower Contact in CIRRAS.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "ETag" : {
                "description" : "The ETag response-header field provides the current value of the entity tag for the requested variant.",
                "style" : "simple"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GrowerContactRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GrowerContactRsrc"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.GET_GROWER_CONTACT" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      },
      "post" : {
        "summary" : "Insert or Update a Grower Contact table record",
        "operationId" : "Insert or Update a Grower Contact table record",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The growerContact  resource containing the values from CIRRAS.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GrowerContactRsrc"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/GrowerContactRsrc"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "409" : {
            "description" : "Conflict",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          },
          "412" : {
            "description" : "Precondition Failed"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.UPDATE_SYNC_UNDERWRITING" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      },
      "delete" : {
        "summary" : "Delete Grower Contact table record",
        "operationId" : "Delete Grower Contact table record",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "The If-Match request-header must match the current eTag of the resource or the request will fail.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "growerContactId",
          "in" : "query",
          "description" : "The id of the Grower Contact in CIRRAS.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "409" : {
            "description" : "Conflict"
          },
          "412" : {
            "description" : "Precondition Failed"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.DELETE_SYNC_UNDERWRITING" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      }
    },
    "/growercontractyearsync" : {
      "get" : {
        "summary" : "Get a grower contract year",
        "operationId" : "Get a grower contract year",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "growerContractYearId",
          "in" : "query",
          "description" : "The id of the grower contract year in CIRRAS.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "ETag" : {
                "description" : "The ETag response-header field provides the current value of the entity tag for the requested variant.",
                "style" : "simple"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GrowerContractYearSyncRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GrowerContractYearSyncRsrc"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.GET_LAND" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      },
      "post" : {
        "summary" : "Insert or Update a grower contract year table record",
        "operationId" : "Insert or Update a grower contract year table record",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The grower contract year resource containing the values from CIRRAS.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GrowerContractYearSyncRsrc"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/GrowerContractYearSyncRsrc"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "409" : {
            "description" : "Conflict",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          },
          "412" : {
            "description" : "Precondition Failed"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.UPDATE_SYNC_UNDERWRITING" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      },
      "delete" : {
        "summary" : "Delete grower contract year table record",
        "operationId" : "Delete grower contract year table record",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "The If-Match request-header must match the current eTag of the resource or the request will fail.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "growerContractYearId",
          "in" : "query",
          "description" : "The id of the grower contract year in CIRRAS.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "409" : {
            "description" : "Conflict"
          },
          "412" : {
            "description" : "Precondition Failed"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.DELETE_SYNC_UNDERWRITING" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      }
    },
    "/grower" : {
      "get" : {
        "summary" : "Get a grower",
        "operationId" : "Get a grower",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "growerId",
          "in" : "query",
          "description" : "The id of the grower in CIRRAS.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "ETag" : {
                "description" : "The ETag response-header field provides the current value of the entity tag for the requested variant.",
                "style" : "simple"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GrowerRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GrowerRsrc"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.GET_GROWER" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      },
      "post" : {
        "summary" : "Insert or Update a grower table record",
        "operationId" : "Insert or Update a grower table record",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The grower resource containing the values from CIRRAS.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GrowerRsrc"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/GrowerRsrc"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "409" : {
            "description" : "Conflict",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          },
          "412" : {
            "description" : "Precondition Failed"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.UPDATE_SYNC_UNDERWRITING" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      },
      "delete" : {
        "summary" : "Delete grower table record",
        "operationId" : "Delete grower table record",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "The If-Match request-header must match the current eTag of the resource or the request will fail.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "growerId",
          "in" : "query",
          "description" : "The id of the grower in CIRRAS.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "409" : {
            "description" : "Conflict"
          },
          "412" : {
            "description" : "Precondition Failed"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.DELETE_SYNC_UNDERWRITING" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      }
    },
    "/inventoryContracts/{inventoryContractGuid}" : {
      "get" : {
        "summary" : "Get the inventory contract",
        "operationId" : "Get the inventory contract.",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "inventoryContractGuid",
          "in" : "path",
          "description" : "The GUID of the inventory contract.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "ETag" : {
                "description" : "The ETag response-header field provides the current value of the entity tag for the requested variant.",
                "style" : "simple"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InventoryContractRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InventoryContractRsrc"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.GET_INVENTORY_CONTRACT" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      },
      "put" : {
        "summary" : "Update inventory contract",
        "operationId" : "Update inventory contract",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "The If-Match request-header must match the current eTag of the resource or the request will fail.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "inventoryContractGuid",
          "in" : "path",
          "description" : "The GUID of the inventory contract resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The inventory contract resource containing the new values.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/InventoryContractRsrc"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/InventoryContractRsrc"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "ETag" : {
                "description" : "The ETag response-header field provides the current value of the entity tag for the requested variant.",
                "style" : "simple"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InventoryContractRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InventoryContractRsrc"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "409" : {
            "description" : "Conflict",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          },
          "412" : {
            "description" : "Precondition Failed"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.UPDATE_INVENTORY_CONTRACT" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      },
      "delete" : {
        "summary" : "Delete inventory contract",
        "operationId" : "Delete inventory contract",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "The If-Match request-header must match the current eTag of the resource or the request will fail.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "inventoryContractGuid",
          "in" : "path",
          "description" : "The GUID of the inventory contract resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "409" : {
            "description" : "Conflict"
          },
          "412" : {
            "description" : "Precondition Failed"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.DELETE_INVENTORY_CONTRACT" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      }
    },
    "/inventoryContracts" : {
      "get" : {
        "summary" : "Get list of inventory contracts.",
        "operationId" : "Get list of inventory contracts.",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cropYear",
          "in" : "query",
          "description" : "Filter the results by the year",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "insurancePlanId",
          "in" : "query",
          "description" : "Filter the results by the insurance plan",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "officeId",
          "in" : "query",
          "description" : "Filter the results by the office",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "policyStatusCode",
          "in" : "query",
          "description" : "Filter the results by the policy status",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "policyNumber",
          "in" : "query",
          "description" : "Filter the results by the policy number",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "growerInfo",
          "in" : "query",
          "description" : "Filter the results by the grower info (Name, Number, Phone, Email",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sortColumn",
          "in" : "query",
          "description" : "Sort by column",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "inventoryContractGuids",
          "in" : "query",
          "description" : "GUIDs of the inventory contracts to be returned",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "ETag" : {
                "description" : "The ETag response-header field provides the current value of the entity tag for the requested variant.",
                "style" : "simple"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InventoryContractListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InventoryContractListRsrc"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.PRINT_INVENTORY_CONTRACT" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      },
      "post" : {
        "summary" : "Add a new inventory contract",
        "operationId" : "Add a new inventory contract",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The inventory contract resource containing the new values.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/InventoryContractRsrc"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/InventoryContractRsrc"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "headers" : {
              "ETag" : {
                "description" : "The ETag response-header field provides the current value of the entity tag for the requested variant.",
                "style" : "simple"
              },
              "Location" : {
                "description" : "The Location response-header field is used to redirect the recipient to a location other than the Request-URI for completion of the request or identification of a new resource.",
                "style" : "simple"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InventoryContractRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InventoryContractRsrc"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.CREATE_INVENTORY_CONTRACT" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      }
    },
    "/inventoryContracts/report" : {
      "get" : {
        "summary" : "Generate the inventory report",
        "operationId" : "Generate the inventory report.",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cropYear",
          "in" : "query",
          "description" : "Filter the results by the year",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "insurancePlanId",
          "in" : "query",
          "description" : "Filter the results by the insurance plan",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "officeId",
          "in" : "query",
          "description" : "Filter the results by the office",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "policyStatusCode",
          "in" : "query",
          "description" : "Filter the results by the policy status",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "policyNumber",
          "in" : "query",
          "description" : "Filter the results by the policy number",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "growerInfo",
          "in" : "query",
          "description" : "Filter the results by the grower info (Name, Number, Phone, Email",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sortColumn",
          "in" : "query",
          "description" : "Sort by column",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "policyIds",
          "in" : "query",
          "description" : "IDs of policies to be included",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "ETag" : {
                "description" : "The ETag response-header field provides the current value of the entity tag for the requested variant.",
                "style" : "simple"
              }
            },
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.PRINT_INVENTORY_CONTRACT" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      }
    },
    "/legalland/{legalLandId}" : {
      "get" : {
        "summary" : "Get the legal land",
        "operationId" : "Get the legal land.",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "legalLandId",
          "in" : "path",
          "description" : "The ID of the legal land.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "ETag" : {
                "description" : "The ETag response-header field provides the current value of the entity tag for the requested variant.",
                "style" : "simple"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LegalLandRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LegalLandRsrc"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.GET_LEGAL_LAND" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      },
      "put" : {
        "summary" : "Update legal land",
        "operationId" : "Update legal land",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "The If-Match request-header must match the current eTag of the resource or the request will fail.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "legalLandId",
          "in" : "path",
          "description" : "The ID of the legal land resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The legal land resource containing the new values.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LegalLandRsrc"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/LegalLandRsrc"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "ETag" : {
                "description" : "The ETag response-header field provides the current value of the entity tag for the requested variant.",
                "style" : "simple"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LegalLandRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LegalLandRsrc"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "409" : {
            "description" : "Conflict",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          },
          "412" : {
            "description" : "Precondition Failed"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.UPDATE_LEGAL_LAND" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      },
      "delete" : {
        "summary" : "Delete legal land",
        "operationId" : "Delete legal land",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "The If-Match request-header must match the current eTag of the resource or the request will fail.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "legalLandId",
          "in" : "path",
          "description" : "The ID of the legal land resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "409" : {
            "description" : "Conflict"
          },
          "412" : {
            "description" : "Precondition Failed"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.DELETE_LEGAL_LAND" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      }
    },
    "/legallandfieldxref" : {
      "get" : {
        "summary" : "Get a legal land - field xref",
        "operationId" : "Get a legal land - field xref",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "legalLandId",
          "in" : "query",
          "description" : "The id of the legal land in CIRRAS.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fieldId",
          "in" : "query",
          "description" : "The id of the lot in CIRRAS.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "ETag" : {
                "description" : "The ETag response-header field provides the current value of the entity tag for the requested variant.",
                "style" : "simple"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LegalLandFieldXrefRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LegalLandFieldXrefRsrc"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.GET_LAND" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      },
      "post" : {
        "summary" : "Insert or Update a legal land - field xref table record",
        "operationId" : "Insert or Update a legal land - field xref table record",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The legal land - field xref resource containing the values from CIRRAS.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LegalLandFieldXrefRsrc"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/LegalLandFieldXrefRsrc"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "409" : {
            "description" : "Conflict",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          },
          "412" : {
            "description" : "Precondition Failed"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.UPDATE_SYNC_UNDERWRITING" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      },
      "delete" : {
        "summary" : "Delete legal land - field xref table record",
        "operationId" : "Delete legal land - field xref table record",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "The If-Match request-header must match the current eTag of the resource or the request will fail.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "legalLandId",
          "in" : "query",
          "description" : "The id of the legal land in CIRRAS.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fieldId",
          "in" : "query",
          "description" : "The id of the lot in CIRRAS.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "409" : {
            "description" : "Conflict"
          },
          "412" : {
            "description" : "Precondition Failed"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.DELETE_SYNC_UNDERWRITING" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      }
    },
    "/legallands" : {
      "get" : {
        "summary" : "Get list of legal land.",
        "operationId" : "Get list of legal land.",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "legalLocation",
          "in" : "query",
          "description" : "Filter the results by legal location",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "primaryPropertyIdentifier",
          "in" : "query",
          "description" : "Filter the results by property identifier",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "growerInfo",
          "in" : "query",
          "description" : "Filter the results by the grower info (Name, Number, Phone, Email",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "datasetType",
          "in" : "query",
          "description" : "Filter the results by dataset type: NO_RISK_AREA - Land without Risk Areas, CLEANUP - Land that needs cleanup",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "isWildCardSearch",
          "in" : "query",
          "description" : "True if wildcard search and False if exact search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "searchByLegalLocOrLegalDesc",
          "in" : "query",
          "description" : "True if legalLocation criterion can match legalLocation or legalDescription, False if it can only match legalLocation",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sortColumn",
          "in" : "query",
          "description" : "Sort by column",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sortDirection",
          "in" : "query",
          "description" : "Sort direction",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageNumber",
          "in" : "query",
          "description" : "The page number of the results to be returned.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageRowCount",
          "in" : "query",
          "description" : "The number of results per page.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "ETag" : {
                "description" : "The ETag response-header field provides the current value of the entity tag for the requested variant.",
                "style" : "simple"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LegalLandListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LegalLandListRsrc"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.GET_LEGAL_LAND" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      },
      "post" : {
        "summary" : "Add a new legal land",
        "operationId" : "Add a new legal land",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The legal land resource containing the new values.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LegalLandRsrc"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/LegalLandRsrc"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "headers" : {
              "ETag" : {
                "description" : "The ETag response-header field provides the current value of the entity tag for the requested variant.",
                "style" : "simple"
              },
              "Location" : {
                "description" : "The Location response-header field is used to redirect the recipient to a location other than the Request-URI for completion of the request or identification of a new resource.",
                "style" : "simple"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LegalLandRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LegalLandRsrc"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.CREATE_LEGAL_LAND" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      }
    },
    "/legallandsync" : {
      "post" : {
        "summary" : "Insert or Update a legal land table record",
        "operationId" : "Insert or Update a legal land table record",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The legal land resource containing the values from CIRRAS.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LegalLandRsrc"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/LegalLandRsrc"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "409" : {
            "description" : "Conflict",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          },
          "412" : {
            "description" : "Precondition Failed"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.UPDATE_SYNC_UNDERWRITING" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      },
      "delete" : {
        "summary" : "Delete legal land table record",
        "operationId" : "Delete legal land table record",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "The If-Match request-header must match the current eTag of the resource or the request will fail.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "legalLandId",
          "in" : "query",
          "description" : "The id of the legal land in CIRRAS.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "409" : {
            "description" : "Conflict"
          },
          "412" : {
            "description" : "Precondition Failed"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.DELETE_SYNC_UNDERWRITING" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      }
    },
    "/policy" : {
      "get" : {
        "summary" : "Get a policy",
        "operationId" : "Get a policy",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "policyId",
          "in" : "query",
          "description" : "The id of the policy in CIRRAS.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "ETag" : {
                "description" : "The ETag response-header field provides the current value of the entity tag for the requested variant.",
                "style" : "simple"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PolicyRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PolicyRsrc"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.GET_POLICY" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      },
      "post" : {
        "summary" : "Insert or Update a policy table record",
        "operationId" : "Insert or Update a policy table record",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The policy resource containing the values from CIRRAS.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PolicyRsrc"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/PolicyRsrc"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "409" : {
            "description" : "Conflict",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          },
          "412" : {
            "description" : "Precondition Failed"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.UPDATE_SYNC_UNDERWRITING" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      },
      "delete" : {
        "summary" : "Delete policy table record",
        "operationId" : "Delete policy table record",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "The If-Match request-header must match the current eTag of the resource or the request will fail.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "policyId",
          "in" : "query",
          "description" : "The id of the policy in CIRRAS.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "409" : {
            "description" : "Conflict"
          },
          "412" : {
            "description" : "Precondition Failed"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.DELETE_SYNC_UNDERWRITING" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      }
    },
    "/riskareas" : {
      "get" : {
        "summary" : "Get a list of risk areas",
        "operationId" : "Get a list of risk areas",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "insurancePlanId",
          "in" : "query",
          "description" : "Filter the results by the insurance plan",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "ETag" : {
                "description" : "The ETag response-header field provides the current value of the entity tag for the requested variant.",
                "style" : "simple"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RiskAreaListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RiskAreaListRsrc"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.GET_CODE_TABLES" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      }
    },
    "/seedingDeadlines" : {
      "get" : {
        "summary" : "Get a list of seeding deadlines",
        "operationId" : "Get a list of seeding deadlines",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cropYear",
          "in" : "query",
          "description" : "Filter the results by the year",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "ETag" : {
                "description" : "The ETag response-header field provides the current value of the entity tag for the requested variant.",
                "style" : "simple"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SeedingDeadlineListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SeedingDeadlineListRsrc"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.GET_SEEDING_DEADLINES" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      },
      "put" : {
        "summary" : "Save a list of seeding deadlines",
        "operationId" : "Save a list of seeding deadlines",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "The If-Match request-header must match the current eTag of the resource or the request will fail.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cropYear",
          "in" : "query",
          "description" : "Filter the results by the year",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "A list of seeding deadlines to be saved",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SeedingDeadlineListRsrc"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/SeedingDeadlineListRsrc"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "ETag" : {
                "description" : "The ETag response-header field provides the current value of the entity tag for the requested variant.",
                "style" : "simple"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SeedingDeadlineListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SeedingDeadlineListRsrc"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "409" : {
            "description" : "Conflict",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          },
          "412" : {
            "description" : "Precondition Failed"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.SAVE_SEEDING_DEADLINES" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      }
    },
    "/openapi.json" : {
      "get" : {
        "summary" : "Get Swagger Document",
        "operationId" : "Get Swagger Document",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "ETag" : {
                "description" : "The ETag response-header field provides the current value of the entity tag for the requested variant.",
                "style" : "simple"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EndpointsRsrc"
                }
              }
            }
          }
        },
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      }
    },
    "/synccode" : {
      "post" : {
        "summary" : "Insert or Update a code table record",
        "operationId" : "Insert or Update a code table record",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The code resource containing the values from CIRRAS.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SyncCodeRsrc"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/SyncCodeRsrc"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "409" : {
            "description" : "Conflict",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          },
          "412" : {
            "description" : "Precondition Failed"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.UPDATE_SYNC_UNDERWRITING" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      },
      "delete" : {
        "summary" : "Delete code table record",
        "operationId" : "Delete code table record",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "The If-Match request-header must match the current eTag of the resource or the request will fail.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "codeTableType",
          "in" : "query",
          "description" : "Code Table Type of the record to be deleted",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "uniqueKey",
          "in" : "query",
          "description" : "unique key of the record to be deleted",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "409" : {
            "description" : "Conflict"
          },
          "412" : {
            "description" : "Precondition Failed"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.DELETE_SYNC_UNDERWRITING" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      }
    },
    "/synccommoditytypecode" : {
      "get" : {
        "summary" : "Get a Commodity Type Code",
        "operationId" : "Get a Commodity Type Code",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "commodityTypeCode",
          "in" : "query",
          "description" : "The id of the Commodity Type Code in CIRRAS.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "ETag" : {
                "description" : "The ETag response-header field provides the current value of the entity tag for the requested variant.",
                "style" : "simple"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SyncCommodityTypeCodeRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SyncCommodityTypeCodeRsrc"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.GET_COMMODITY_TYPE_CODE" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      },
      "post" : {
        "summary" : "Insert or Update a Commodity Type Code table record",
        "operationId" : "Insert or Update a Commodity Type Code table record",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The Commodity Type Code resource containing the values from CIRRAS.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SyncCommodityTypeCodeRsrc"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/SyncCommodityTypeCodeRsrc"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "409" : {
            "description" : "Conflict",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          },
          "412" : {
            "description" : "Precondition Failed"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.UPDATE_SYNC_UNDERWRITING" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      },
      "delete" : {
        "summary" : "Delete Commodity Type Code table record",
        "operationId" : "Delete Commodity Type Code table record",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "The If-Match request-header must match the current eTag of the resource or the request will fail.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "commodityTypeCode",
          "in" : "query",
          "description" : "The id of the Commodity Type Code in CIRRAS.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "409" : {
            "description" : "Conflict"
          },
          "412" : {
            "description" : "Precondition Failed"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.DELETE_SYNC_UNDERWRITING" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      }
    },
    "/synccommoditytypevarietyxref" : {
      "get" : {
        "summary" : "Get a Commodity Type Variety Xref",
        "operationId" : "Get a Commodity Type Variety Xref",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "commodityTypeCode",
          "in" : "query",
          "description" : "The Commodity Type Code in CIRRAS.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cropVarietyId",
          "in" : "query",
          "description" : "The Variety Id in CIRRAS.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "ETag" : {
                "description" : "The ETag response-header field provides the current value of the entity tag for the requested variant.",
                "style" : "simple"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SyncCommodityTypeVarietyXrefRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SyncCommodityTypeVarietyXrefRsrc"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.GET_COMMODITY_TYPE_VARIETY_XREF" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      },
      "post" : {
        "summary" : "Insert or Update a Commodity Type Variety Xref table record",
        "operationId" : "Insert or Update a Commodity Type Variety Xref table record",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The Commodity Type Variety Xref resource containing the values from CIRRAS.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SyncCommodityTypeVarietyXrefRsrc"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/SyncCommodityTypeVarietyXrefRsrc"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "409" : {
            "description" : "Conflict",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          },
          "412" : {
            "description" : "Precondition Failed"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.UPDATE_SYNC_UNDERWRITING" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      },
      "delete" : {
        "summary" : "Delete Commodity Type Variety Xref table record",
        "operationId" : "Delete Commodity Type Variety Xref table record",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "The If-Match request-header must match the current eTag of the resource or the request will fail.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "commodityTypeCode",
          "in" : "query",
          "description" : "The Commodity Type Code in CIRRAS.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cropVarietyId",
          "in" : "query",
          "description" : "The Variety Id in CIRRAS.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "409" : {
            "description" : "Conflict"
          },
          "412" : {
            "description" : "Precondition Failed"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.DELETE_SYNC_UNDERWRITING" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      }
    },
    "/synccommodityvariety" : {
      "get" : {
        "summary" : "Get a commodity or variety",
        "operationId" : "Get a commodity or variety",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "crptId",
          "in" : "query",
          "description" : "The id of the commodity or variety in CIRRAS.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "ETag" : {
                "description" : "The ETag response-header field provides the current value of the entity tag for the requested variant.",
                "style" : "simple"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SyncCommodityVariety"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SyncCommodityVariety"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.GET_COMMODITY_VARIETY" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      },
      "post" : {
        "summary" : "Insert or Update a commodity or variety",
        "operationId" : "Insert or Update a commodity or variety",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The commodity variety resource containing the values from CIRRAS.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SyncCommodityVarietyRsrc"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/SyncCommodityVarietyRsrc"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "409" : {
            "description" : "Conflict",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          },
          "412" : {
            "description" : "Precondition Failed"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.UPDATE_SYNC_UNDERWRITING" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      },
      "delete" : {
        "summary" : "Delete commodity or variety record",
        "operationId" : "Delete commodity or variety record",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "The If-Match request-header must match the current eTag of the resource or the request will fail.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "crptId",
          "in" : "query",
          "description" : "The id of the crop type in CIRRAS.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "409" : {
            "description" : "Conflict"
          },
          "412" : {
            "description" : "Precondition Failed"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.DELETE_SYNC_UNDERWRITING" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      }
    },
    "/" : {
      "get" : {
        "summary" : "Get Top Level Resources",
        "operationId" : "Get Top Level Resources.",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "ETag" : {
                "description" : "The ETag response-header field provides the current value of the entity tag for the requested variant.",
                "style" : "simple"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EndpointsRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EndpointsRsrc"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      }
    },
    "/underwritingYear/{cropYear}" : {
      "get" : {
        "summary" : "Get the underwriting year",
        "operationId" : "Get the underwriting year.",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cropYear",
          "in" : "path",
          "description" : "crop year of the underwriting year.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "ETag" : {
                "description" : "The ETag response-header field provides the current value of the entity tag for the requested variant.",
                "style" : "simple"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnderwritingYearRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnderwritingYearRsrc"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.GET_UNDERWRITING_YEAR" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      },
      "delete" : {
        "summary" : "Delete underwriting year",
        "operationId" : "Delete underwriting year",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "The If-Match request-header must match the current eTag of the resource or the request will fail.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cropYear",
          "in" : "path",
          "description" : "crop year of the resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "409" : {
            "description" : "Conflict"
          },
          "412" : {
            "description" : "Precondition Failed"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.DELETE_UNDERWRITING_YEAR" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      }
    },
    "/underwritingYears" : {
      "get" : {
        "summary" : "Get list of underwriting years.",
        "operationId" : "Get list of underwriting years.",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "ETag" : {
                "description" : "The ETag response-header field provides the current value of the entity tag for the requested variant.",
                "style" : "simple"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnderwritingYearListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnderwritingYearListRsrc"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.GET_UNDERWRITING_YEAR" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      },
      "post" : {
        "summary" : "Add a new underwriting year",
        "operationId" : "Add a new underwriting year",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The underwriting year resource containing the new values.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UnderwritingYearRsrc"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/UnderwritingYearRsrc"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "headers" : {
              "ETag" : {
                "description" : "The ETag response-header field provides the current value of the entity tag for the requested variant.",
                "style" : "simple"
              },
              "Location" : {
                "description" : "The Location response-header field is used to redirect the recipient to a location other than the Request-URI for completion of the request or identification of a new resource.",
                "style" : "simple"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnderwritingYearRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnderwritingYearRsrc"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.CREATE_UNDERWRITING_YEAR" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      }
    },
    "/uwcontracts/{policyId}" : {
      "get" : {
        "summary" : "Get the uw contract",
        "operationId" : "Get the uw contract.",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "policyId",
          "in" : "path",
          "description" : "The Policy ID of the uw contract.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "loadLinkedPolicies",
          "in" : "query",
          "description" : "True if linked policies should be included in the returned resource, False if not",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "ETag" : {
                "description" : "The ETag response-header field provides the current value of the entity tag for the requested variant.",
                "style" : "simple"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UwContractRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UwContractRsrc"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.GET_UWCONTRACT" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      }
    },
    "/uwcontracts" : {
      "get" : {
        "summary" : "Get list of uw contracts.",
        "operationId" : "Get list of uw contracts.",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cropYear",
          "in" : "query",
          "description" : "Filter the results by the year",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "insurancePlanId",
          "in" : "query",
          "description" : "Filter the results by the insurance plan",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "officeId",
          "in" : "query",
          "description" : "Filter the results by the office",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "policyStatusCode",
          "in" : "query",
          "description" : "Filter the results by the policy status",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "policyNumber",
          "in" : "query",
          "description" : "Filter the results by the policy number",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "growerInfo",
          "in" : "query",
          "description" : "Filter the results by the grower info (Name, Number, Phone, Email",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "datasetType",
          "in" : "query",
          "description" : "Filter the results by the dataset type (LINKED_GF_POLICIES",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sortColumn",
          "in" : "query",
          "description" : "Sort by column",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sortDirection",
          "in" : "query",
          "description" : "Sort direction",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageNumber",
          "in" : "query",
          "description" : "The page number of the results to be returned.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageRowCount",
          "in" : "query",
          "description" : "The number of results per page.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "ETag" : {
                "description" : "The ETag response-header field provides the current value of the entity tag for the requested variant.",
                "style" : "simple"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UwContractListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UwContractListRsrc"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.SEARCH_UWCONTRACTS" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      }
    },
    "/uwcontracts/{policyId}/rolloverDopYieldContract" : {
      "get" : {
        "summary" : "Returns a new dop yield contract based on the inventory of the policy",
        "operationId" : "Rollover the dop yield contract.",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "policyId",
          "in" : "path",
          "description" : "The Policy ID of the uw contract.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "ETag" : {
                "description" : "The ETag response-header field provides the current value of the entity tag for the requested variant.",
                "style" : "simple"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DopYieldContractRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DopYieldContractRsrc"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.CREATE_DOP_YIELD_CONTRACT" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      }
    },
    "/uwcontracts/{policyId}/rolloverInventoryContract" : {
      "get" : {
        "summary" : "Rollover a new inventory contract from the previous crop year",
        "operationId" : "Rollover the inventory contract.",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "policyId",
          "in" : "path",
          "description" : "The Policy ID of the uw contract.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "ETag" : {
                "description" : "The ETag response-header field provides the current value of the entity tag for the requested variant.",
                "style" : "simple"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InventoryContractRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InventoryContractRsrc"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.CREATE_INVENTORY_CONTRACT" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      }
    },
    "/uwcontracts/{policyId}/validateAddField" : {
      "get" : {
        "summary" : "Validate adding field to policy",
        "operationId" : "Validate adding field to policy.",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "policyId",
          "in" : "path",
          "description" : "The Policy ID of the uw contract.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fieldId",
          "in" : "query",
          "description" : "The Field ID to add.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "transferFromPolicyId",
          "in" : "query",
          "description" : "The Policy ID to transfer the field from.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "ETag" : {
                "description" : "The ETag response-header field provides the current value of the entity tag for the requested variant.",
                "style" : "simple"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AddFieldValidationRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AddFieldValidationRsrc"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.CREATE_INVENTORY_CONTRACT" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      }
    },
    "/uwcontracts/{policyId}/validateRemoveField" : {
      "get" : {
        "summary" : "Validate removing a field from a policy",
        "operationId" : "Validate removing a field from a policy.",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "policyId",
          "in" : "path",
          "description" : "The Policy ID of the uw contract.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fieldId",
          "in" : "query",
          "description" : "The Field ID to remove.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "ETag" : {
                "description" : "The ETag response-header field provides the current value of the entity tag for the requested variant.",
                "style" : "simple"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RemoveFieldValidationRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RemoveFieldValidationRsrc"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.CREATE_INVENTORY_CONTRACT" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      }
    },
    "/uwcontracts/{policyId}/validateRenameLegal" : {
      "get" : {
        "summary" : "Validate renaming legal location on a field",
        "operationId" : "Validate renaming legal location on a field.",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "policyId",
          "in" : "path",
          "description" : "The Policy ID of the uw contract.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "annualFieldDetailId",
          "in" : "query",
          "description" : "The Annual Field Detail ID to update.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "newLegalLocation",
          "in" : "query",
          "description" : "The new value for legal location.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "ETag" : {
                "description" : "The ETag response-header field provides the current value of the entity tag for the requested variant.",
                "style" : "simple"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RenameLegalValidationRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RenameLegalValidationRsrc"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.CREATE_INVENTORY_CONTRACT" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      }
    },
    "/uwcontracts/{policyId}/validateReplaceLegal" : {
      "get" : {
        "summary" : "Validate replacing legal location on a field",
        "operationId" : "Validate replacing legal location on a field.",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "policyId",
          "in" : "path",
          "description" : "The Policy ID of the uw contract.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "annualFieldDetailId",
          "in" : "query",
          "description" : "The Annual Field Detail ID of the field and year of the policy.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fieldLabel",
          "in" : "query",
          "description" : "The Field Label of the Field the Legal Land is replaced.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "legalLandId",
          "in" : "query",
          "description" : "The id of the new legal land.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "ETag" : {
                "description" : "The ETag response-header field provides the current value of the entity tag for the requested variant.",
                "style" : "simple"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReplaceLegalValidationRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReplaceLegalValidationRsrc"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.CREATE_INVENTORY_CONTRACT" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      }
    },
    "/yieldmeasunitconversions" : {
      "get" : {
        "summary" : "Get a list of yield measurement unit conversions",
        "operationId" : "Get a list of yield measurement unit conversions",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "insurancePlanId",
          "in" : "query",
          "description" : "Filter the results by the insurance plan",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "srcYieldMeasUnitTypeCode",
          "in" : "query",
          "description" : "Filter the results by source conversion unit",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "targetYieldMeasUnitTypeCode",
          "in" : "query",
          "description" : "Filter the results by target conversion unit",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "ETag" : {
                "description" : "The ETag response-header field provides the current value of the entity tag for the requested variant.",
                "style" : "simple"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/YieldMeasUnitConversionListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/YieldMeasUnitConversionListRsrc"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.GET_YIELD_MEAS_UNIT_CONVERSIONS" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      },
      "put" : {
        "summary" : "Save a list of yield measurement unit conversions",
        "operationId" : "Save a list of yield measurement unit conversions",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "The If-Match request-header must match the current eTag of the resource or the request will fail.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "insurancePlanId",
          "in" : "query",
          "description" : "Filter the results by the insurance plan",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "srcYieldMeasUnitTypeCode",
          "in" : "query",
          "description" : "Filter the results by source conversion unit",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "targetYieldMeasUnitTypeCode",
          "in" : "query",
          "description" : "Filter the results by target conversion unit",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Resource with a list of yield measurement unit conversions to be saved",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/YieldMeasUnitConversionListRsrc"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/YieldMeasUnitConversionListRsrc"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "ETag" : {
                "description" : "The ETag response-header field provides the current value of the entity tag for the requested variant.",
                "style" : "simple"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/YieldMeasUnitConversionListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/YieldMeasUnitConversionListRsrc"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "409" : {
            "description" : "Conflict",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          },
          "412" : {
            "description" : "Precondition Failed"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.SAVE_YIELD_MEAS_UNIT_CONVERSIONS" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      }
    },
    "/yieldmeasunittypecodes" : {
      "get" : {
        "summary" : "Get a list of yield measurement unit type codes",
        "operationId" : "Get a list of yield measurement unit type codes",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "insurancePlanId",
          "in" : "query",
          "description" : "Filter the results by the insurance plan",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "ETag" : {
                "description" : "The ETag response-header field provides the current value of the entity tag for the requested variant.",
                "style" : "simple"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/YieldMeasUnitTypeCodeListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/YieldMeasUnitTypeCodeListRsrc"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "CIRRAS_UNDERWRITING.GET_YIELD_MEAS_UNIT_TYPE_CODES" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.none}",
        "x-throttling-tier" : "Unlimited"
      }
    },
    "/codeHierarchies/{codeHierarchyName}" : {
      "get" : {
        "summary" : "Get CodeHierarchy resource by code table name.",
        "operationId" : "Get CodeHierarchy resource by code table name.",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "codeHierarchyName",
          "in" : "path",
          "description" : "The identifier of the CodeHierarchy resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "effectiveAsOfDate",
          "in" : "query",
          "description" : "Return the results as of the effectiveAsOfDate.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "ETag" : {
                "description" : "The ETag response-header field provides the current value of the entity tag for the requested variant.",
                "style" : "simple"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CodeHierarchyRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CodeHierarchyRsrc"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "GETTOPLEVEL" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.app_and_app_user}",
        "x-throttling-tier" : "Unlimited"
      },
      "put" : {
        "summary" : "Update CodeHierarchy by code table name.",
        "operationId" : "Update CodeHierarchy resource by code table name.",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "The If-Match request-header must match the current eTag of the resource or the request will fail.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "codeHierarchyName",
          "in" : "path",
          "description" : "The identifier of the CodeHierarchy resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The CodeHierarchy resource containing the new values.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CodeHierarchyRsrc"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/CodeHierarchyRsrc"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "ETag" : {
                "description" : "The ETag response-header field provides the current value of the entity tag for the requested variant.",
                "style" : "simple"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CodeHierarchyRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CodeHierarchyRsrc"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "409" : {
            "description" : "Conflict"
          },
          "412" : {
            "description" : "Precondition Failed"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "GETTOPLEVEL" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.app_and_app_user}",
        "x-throttling-tier" : "Unlimited"
      }
    },
    "/codeHierarchies" : {
      "get" : {
        "summary" : "Get Code Hierarchy List Resource",
        "operationId" : "Get Code Hierarchy List Resource",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "effectiveAsOfDate",
          "in" : "query",
          "description" : "Return the results as of the effectiveAsOfDate.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "codeHierarchyName",
          "in" : "query",
          "description" : "Filter the results by the codeHierarchyName.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "ETag" : {
                "description" : "The ETag response-header field provides the current value of the entity tag for the requested variant.",
                "style" : "simple"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CodeHierarchyListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CodeHierarchyListRsrc"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "x-auth-type" : "#{wso2.x-auth-type.app_and_app_user}",
        "x-throttling-tier" : "Unlimited"
      }
    },
    "/codeTables/{codeTableName}" : {
      "get" : {
        "summary" : "Get CodeTable resource by code table name.",
        "operationId" : "Get CodeTable resource by code table name.",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "codeTableName",
          "in" : "path",
          "description" : "The identifier of the CodeTable resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "effectiveAsOfDate",
          "in" : "query",
          "description" : "Return the results as of the effectiveAsOfDate.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "ETag" : {
                "description" : "The ETag response-header field provides the current value of the entity tag for the requested variant.",
                "style" : "simple"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CodeTableRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CodeTableRsrc"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "GETTOPLEVEL" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.app_and_app_user}",
        "x-throttling-tier" : "Unlimited"
      },
      "put" : {
        "summary" : "Update CodeTable by code table name.",
        "operationId" : "Update CodeTable resource by code table name.",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "The If-Match request-header must match the current eTag of the resource or the request will fail.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "codeTableName",
          "in" : "path",
          "description" : "The identifier of the CodeTable resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The CodeTable resource containing the new values.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CodeTableRsrc"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/CodeTableRsrc"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "ETag" : {
                "description" : "The ETag response-header field provides the current value of the entity tag for the requested variant.",
                "style" : "simple"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CodeTableRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CodeTableRsrc"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "409" : {
            "description" : "Conflict"
          },
          "412" : {
            "description" : "Precondition Failed"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "security" : [ {
          "Webade-OAUTH2" : [ "GETTOPLEVEL" ]
        } ],
        "x-auth-type" : "#{wso2.x-auth-type.app_and_app_user}",
        "x-throttling-tier" : "Unlimited"
      }
    },
    "/codeTables" : {
      "get" : {
        "summary" : "Get Code Table List Resource",
        "operationId" : "Get Code Table List Resource",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "effectiveAsOfDate",
          "in" : "query",
          "description" : "Return the results as of the effectiveAsOfDate.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "codeTableName",
          "in" : "query",
          "description" : "Filter the results by the codeTableName.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "ETag" : {
                "description" : "The ETag response-header field provides the current value of the entity tag for the requested variant.",
                "style" : "simple"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CodeTableListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CodeTableListRsrc"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "x-auth-type" : "#{wso2.x-auth-type.app_and_app_user}",
        "x-throttling-tier" : "Unlimited"
      }
    },
    "/checkHealth" : {
      "get" : {
        "summary" : "Query the health of the service.",
        "operationId" : "Query the health of the service.",
        "parameters" : [ {
          "name" : "RequestId",
          "in" : "header",
          "description" : "The unique identity of the request assigned by the originator to help trace the request through the logs.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Rest-Version",
          "in" : "header",
          "description" : "The version of the Rest API supported by the requesting client.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Cache-Control",
          "in" : "header",
          "description" : "Used to specify directives for caches along the request-response chain",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Pragma",
          "in" : "header",
          "description" : "An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Contains the credentials to authenticate a user agent with a server.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "callstack",
          "in" : "query",
          "description" : "A comm separated list of the identifier of the calling components.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "ETag" : {
                "description" : "The ETag response-header field provides the current value of the entity tag for the requested variant.",
                "style" : "simple"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HealthCheckResponseRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HealthCheckResponseRsrc"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageListRsrc"
                }
              }
            }
          }
        },
        "x-auth-type" : "#{wso2.x-auth-type.app_and_app_user}",
        "x-throttling-tier" : "Unlimited"
      }
    }
  },
  "components" : {
    "schemas" : {
      "MessageListRsrc" : {
        "required" : [ "@type" ],
        "type" : "object",
        "properties" : {
          "messages" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MessageRsrc"
            }
          },
          "etag" : {
            "type" : "string",
            "writeOnly" : true
          },
          "@type" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "messages",
          "namespace" : "http://common.wfone.nrs.gov.bc.ca/v1/"
        },
        "discriminator" : {
          "propertyName" : "@type"
        }
      },
      "MessageRsrc" : {
        "required" : [ "@type" ],
        "type" : "object",
        "properties" : {
          "path" : {
            "type" : "string"
          },
          "message" : {
            "type" : "string"
          },
          "messageTemplate" : {
            "type" : "string"
          },
          "messageArguments" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "@type" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "message",
          "namespace" : "http://common.wfone.nrs.gov.bc.ca/v1/"
        },
        "discriminator" : {
          "propertyName" : "@type"
        }
      },
      "AnnualFieldDetailRsrc" : {
        "required" : [ "@type" ],
        "type" : "object",
        "properties" : {
          "links" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/RelLink"
            }
          },
          "annualFieldDetailId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "legalLandId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "fieldId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "cropYear" : {
            "type" : "integer",
            "format" : "int32"
          },
          "transactionType" : {
            "type" : "string"
          },
          "etag" : {
            "type" : "string",
            "writeOnly" : true
          },
          "@type" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "AnnualFieldDetail",
          "namespace" : "http://underwriting.cirras.mal.gov.bc.ca/v1/"
        },
        "discriminator" : {
          "propertyName" : "@type"
        }
      },
      "RelLink" : {
        "required" : [ "@type" ],
        "type" : "object",
        "properties" : {
          "rel" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            }
          },
          "href" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            }
          },
          "method" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            }
          },
          "etag" : {
            "type" : "string",
            "writeOnly" : true
          },
          "@type" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "rellink",
          "namespace" : "http://common.wfone.nrs.gov.bc.ca/v1/"
        },
        "discriminator" : {
          "propertyName" : "@type"
        }
      },
      "AnnualFieldListRsrc" : {
        "required" : [ "@type" ],
        "type" : "object",
        "properties" : {
          "links" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/RelLink"
            }
          },
          "collection" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AnnualFieldRsrc"
            }
          },
          "etag" : {
            "type" : "string",
            "writeOnly" : true
          },
          "@type" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "annualFieldList",
          "namespace" : "http://underwriting.cirras.mal.gov.bc.ca/v1/"
        },
        "discriminator" : {
          "propertyName" : "@type"
        }
      },
      "AnnualFieldRsrc" : {
        "required" : [ "@type" ],
        "type" : "object",
        "properties" : {
          "links" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/RelLink"
            }
          },
          "contractedFieldDetailId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "annualFieldDetailId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "fieldId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "legalLandId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "fieldLabel" : {
            "type" : "string"
          },
          "otherLegalDescription" : {
            "type" : "string"
          },
          "displayOrder" : {
            "type" : "integer",
            "format" : "int32"
          },
          "cropYear" : {
            "type" : "integer",
            "format" : "int32"
          },
          "landUpdateType" : {
            "type" : "string"
          },
          "transferFromGrowerContractYearId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "plantings" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/InventoryField"
            }
          },
          "dopYieldFields" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DopYieldField"
            }
          },
          "uwComments" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UnderwritingComment"
            }
          },
          "policies" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PolicySimple"
            }
          },
          "etag" : {
            "type" : "string",
            "writeOnly" : true
          },
          "@type" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "annualField",
          "namespace" : "http://underwriting.cirras.mal.gov.bc.ca/v1/"
        },
        "discriminator" : {
          "propertyName" : "@type"
        }
      },
      "DopYieldField" : {
        "type" : "object",
        "properties" : {
          "declaredYieldFieldGuid" : {
            "type" : "string"
          },
          "inventoryFieldGuid" : {
            "type" : "string"
          },
          "estimatedYieldPerAcre" : {
            "type" : "number",
            "format" : "double"
          },
          "estimatedYieldPerAcreDefaultUnit" : {
            "type" : "number",
            "format" : "double"
          },
          "unharvestedAcresInd" : {
            "type" : "boolean"
          },
          "inventorySeededGrainGuid" : {
            "type" : "string"
          },
          "cropCommodityId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "cropCommodityName" : {
            "type" : "string"
          },
          "cropVarietyId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "cropVarietyName" : {
            "type" : "string"
          },
          "isPedigreeInd" : {
            "type" : "boolean"
          },
          "seededDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "seededAcres" : {
            "type" : "number",
            "format" : "double"
          },
          "insurancePlanId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "fieldId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "cropYear" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "InventoryField" : {
        "type" : "object",
        "properties" : {
          "inventoryFieldGuid" : {
            "type" : "string"
          },
          "insurancePlanId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "fieldId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "lastYearCropCommodityId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "lastYearCropCommodityName" : {
            "type" : "string"
          },
          "cropYear" : {
            "type" : "integer",
            "format" : "int32"
          },
          "plantingNumber" : {
            "type" : "integer",
            "format" : "int32"
          },
          "isHiddenOnPrintoutInd" : {
            "type" : "boolean"
          },
          "underseededCropVarietyId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "underseededCropVarietyName" : {
            "type" : "string"
          },
          "underseededAcres" : {
            "type" : "number",
            "format" : "double"
          },
          "underseededInventorySeededForageGuid" : {
            "type" : "string"
          },
          "inventoryUnseeded" : {
            "$ref" : "#/components/schemas/InventoryUnseeded"
          },
          "linkedPlanting" : {
            "$ref" : "#/components/schemas/LinkedPlanting"
          },
          "inventorySeededGrains" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/InventorySeededGrain"
            }
          },
          "inventorySeededForages" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/InventorySeededForage"
            }
          }
        }
      },
      "InventorySeededForage" : {
        "type" : "object",
        "properties" : {
          "inventorySeededForageGuid" : {
            "type" : "string"
          },
          "inventoryFieldGuid" : {
            "type" : "string"
          },
          "cropCommodityId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "cropVarietyId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "cropVarietyName" : {
            "type" : "string"
          },
          "commodityTypeCode" : {
            "type" : "string"
          },
          "fieldAcres" : {
            "type" : "number",
            "format" : "double"
          },
          "seedingYear" : {
            "type" : "integer",
            "format" : "int32"
          },
          "seedingDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "isIrrigatedInd" : {
            "type" : "boolean"
          },
          "isQuantityInsurableInd" : {
            "type" : "boolean"
          },
          "plantInsurabilityTypeCode" : {
            "type" : "string"
          },
          "isAwpEligibleInd" : {
            "type" : "boolean"
          },
          "deletedByUserInd" : {
            "type" : "boolean"
          },
          "linkPlantingType" : {
            "type" : "string"
          },
          "grainInventoryFieldGuid" : {
            "type" : "string"
          },
          "linkedPlanting" : {
            "$ref" : "#/components/schemas/LinkedPlanting"
          }
        }
      },
      "InventorySeededGrain" : {
        "type" : "object",
        "properties" : {
          "inventorySeededGrainGuid" : {
            "type" : "string"
          },
          "inventoryFieldGuid" : {
            "type" : "string"
          },
          "cropCommodityId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "cropCommodityName" : {
            "type" : "string"
          },
          "cropVarietyId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "cropVarietyName" : {
            "type" : "string"
          },
          "commodityTypeCode" : {
            "type" : "string"
          },
          "commodityTypeDesc" : {
            "type" : "string"
          },
          "isQuantityInsurableInd" : {
            "type" : "boolean"
          },
          "isReplacedInd" : {
            "type" : "boolean"
          },
          "isPedigreeInd" : {
            "type" : "boolean"
          },
          "isSpotLossInsurableInd" : {
            "type" : "boolean"
          },
          "seededDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "seededAcres" : {
            "type" : "number",
            "format" : "double"
          },
          "deletedByUserInd" : {
            "type" : "boolean"
          }
        }
      },
      "InventoryUnseeded" : {
        "type" : "object",
        "properties" : {
          "inventoryUnseededGuid" : {
            "type" : "string"
          },
          "inventoryFieldGuid" : {
            "type" : "string"
          },
          "cropCommodityId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "cropCommodityName" : {
            "type" : "string"
          },
          "isUnseededInsurableInd" : {
            "type" : "boolean"
          },
          "acresToBeSeeded" : {
            "type" : "number",
            "format" : "double"
          },
          "deletedByUserInd" : {
            "type" : "boolean"
          }
        }
      },
      "LinkedPlanting" : {
        "type" : "object",
        "properties" : {
          "underseededInventorySeededForageGuid" : {
            "type" : "string"
          },
          "inventoryFieldGuid" : {
            "type" : "string"
          },
          "cropVarietyId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "varietyName" : {
            "type" : "string"
          },
          "acres" : {
            "type" : "number",
            "format" : "double"
          }
        }
      },
      "PolicySimple" : {
        "type" : "object",
        "properties" : {
          "policyId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "insurancePlanId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "insurancePlanName" : {
            "type" : "string"
          },
          "policyNumber" : {
            "type" : "string"
          },
          "cropYear" : {
            "type" : "integer",
            "format" : "int32"
          },
          "growerContractYearId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "inventoryContractGuid" : {
            "type" : "string"
          },
          "declaredYieldContractGuid" : {
            "type" : "string"
          },
          "growerId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "growerNumber" : {
            "type" : "integer",
            "format" : "int32"
          },
          "growerName" : {
            "type" : "string"
          }
        }
      },
      "UnderwritingComment" : {
        "type" : "object",
        "properties" : {
          "underwritingCommentGuid" : {
            "type" : "string"
          },
          "annualFieldDetailId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "underwritingCommentTypeCode" : {
            "type" : "string"
          },
          "underwritingCommentTypeDesc" : {
            "type" : "string"
          },
          "underwritingComment" : {
            "type" : "string"
          },
          "growerContractYearId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "declaredYieldContractGuid" : {
            "type" : "string"
          },
          "createUser" : {
            "type" : "string"
          },
          "createDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updateUser" : {
            "type" : "string"
          },
          "updateDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "deletedByUserInd" : {
            "type" : "boolean"
          },
          "userCanEditInd" : {
            "type" : "boolean"
          },
          "userCanDeleteInd" : {
            "type" : "boolean"
          }
        }
      },
      "CommodityTypeCodeListRsrc" : {
        "required" : [ "@type" ],
        "type" : "object",
        "properties" : {
          "links" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/RelLink"
            }
          },
          "collection" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SyncCommodityTypeCodeRsrc"
            }
          },
          "etag" : {
            "type" : "string",
            "writeOnly" : true
          },
          "@type" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "CommodityTypeCodeList",
          "namespace" : "http://underwriting.cirras.mal.gov.bc.ca/v1/"
        },
        "discriminator" : {
          "propertyName" : "@type"
        }
      },
      "SyncCommodityTypeCodeRsrc" : {
        "required" : [ "@type" ],
        "type" : "object",
        "properties" : {
          "links" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/RelLink"
            }
          },
          "commodityTypeCode" : {
            "type" : "string"
          },
          "cropCommodityId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "description" : {
            "type" : "string"
          },
          "effectiveDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "expiryDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "isActive" : {
            "type" : "boolean"
          },
          "dataSyncTransDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "transactionType" : {
            "type" : "string"
          },
          "insurancePlanId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "etag" : {
            "type" : "string",
            "writeOnly" : true
          },
          "@type" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "CommodityTypeCode",
          "namespace" : "http://underwriting.cirras.mal.gov.bc.ca/v1/"
        },
        "discriminator" : {
          "propertyName" : "@type"
        }
      },
      "ContactEmailRsrc" : {
        "required" : [ "@type" ],
        "type" : "object",
        "properties" : {
          "links" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/RelLink"
            }
          },
          "contactEmailId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "contactId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "emailAddress" : {
            "type" : "string"
          },
          "isPrimaryEmailInd" : {
            "type" : "boolean"
          },
          "effectiveDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "expiryDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "isActive" : {
            "type" : "boolean"
          },
          "dataSyncTransDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "transactionType" : {
            "type" : "string"
          },
          "etag" : {
            "type" : "string",
            "writeOnly" : true
          },
          "@type" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "ContactEmail",
          "namespace" : "http://underwriting.cirras.mal.gov.bc.ca/v1/"
        },
        "discriminator" : {
          "propertyName" : "@type"
        }
      },
      "ContactRsrc" : {
        "required" : [ "@type" ],
        "type" : "object",
        "properties" : {
          "links" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/RelLink"
            }
          },
          "contactId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "firstName" : {
            "type" : "string"
          },
          "lastName" : {
            "type" : "string"
          },
          "dataSyncTransDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "transactionType" : {
            "type" : "string"
          },
          "etag" : {
            "type" : "string",
            "writeOnly" : true
          },
          "@type" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "Contact",
          "namespace" : "http://underwriting.cirras.mal.gov.bc.ca/v1/"
        },
        "discriminator" : {
          "propertyName" : "@type"
        }
      },
      "ContactPhoneRsrc" : {
        "required" : [ "@type" ],
        "type" : "object",
        "properties" : {
          "links" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/RelLink"
            }
          },
          "contactPhoneId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "contactId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "phoneNumber" : {
            "type" : "string"
          },
          "extension" : {
            "type" : "string"
          },
          "isPrimaryPhoneInd" : {
            "type" : "boolean"
          },
          "telecomTypeCode" : {
            "type" : "string"
          },
          "effectiveDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "expiryDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "isActive" : {
            "type" : "boolean"
          },
          "dataSyncTransDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "transactionType" : {
            "type" : "string"
          },
          "etag" : {
            "type" : "string",
            "writeOnly" : true
          },
          "@type" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "ContactPhone",
          "namespace" : "http://underwriting.cirras.mal.gov.bc.ca/v1/"
        },
        "discriminator" : {
          "propertyName" : "@type"
        }
      },
      "ContractedFieldDetailRsrc" : {
        "required" : [ "@type" ],
        "type" : "object",
        "properties" : {
          "links" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/RelLink"
            }
          },
          "contractedFieldDetailId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "annualFieldDetailId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "growerContractYearId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "displayOrder" : {
            "type" : "integer",
            "format" : "int32"
          },
          "transactionType" : {
            "type" : "string"
          },
          "etag" : {
            "type" : "string",
            "writeOnly" : true
          },
          "@type" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "ContractedFieldDetail",
          "namespace" : "http://underwriting.cirras.mal.gov.bc.ca/v1/"
        },
        "discriminator" : {
          "propertyName" : "@type"
        }
      },
      "CropCommodityListRsrc" : {
        "required" : [ "@type" ],
        "type" : "object",
        "properties" : {
          "links" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/RelLink"
            }
          },
          "collection" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CropCommodityRsrc"
            }
          },
          "etag" : {
            "type" : "string",
            "writeOnly" : true
          },
          "@type" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "cropCommodityList",
          "namespace" : "http://underwriting.cirras.mal.gov.bc.ca/v1/"
        },
        "discriminator" : {
          "propertyName" : "@type"
        }
      },
      "CropCommodityRsrc" : {
        "required" : [ "@type" ],
        "type" : "object",
        "properties" : {
          "links" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/RelLink"
            }
          },
          "cropCommodityId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "insurancePlanId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "commodityName" : {
            "type" : "string"
          },
          "shortLabel" : {
            "type" : "string"
          },
          "plantDurationTypeCode" : {
            "type" : "string"
          },
          "isInventoryCropInd" : {
            "type" : "boolean"
          },
          "isYieldCropInd" : {
            "type" : "boolean"
          },
          "isUnderwritingCropInd" : {
            "type" : "boolean"
          },
          "isProductInsurableInd" : {
            "type" : "boolean"
          },
          "isCropInsuranceEligibleInd" : {
            "type" : "boolean"
          },
          "isPlantInsuranceEligibleInd" : {
            "type" : "boolean"
          },
          "isOtherInsuranceEligibleInd" : {
            "type" : "boolean"
          },
          "yieldMeasUnitTypeCode" : {
            "type" : "string"
          },
          "yieldDecimalPrecision" : {
            "type" : "integer",
            "format" : "int32"
          },
          "dataSyncTransDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "inventoryTypeCode" : {
            "type" : "string"
          },
          "yieldTypeCode" : {
            "type" : "string"
          },
          "cropVariety" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CropVariety"
            }
          },
          "etag" : {
            "type" : "string",
            "writeOnly" : true
          },
          "@type" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "cropCommodity",
          "namespace" : "http://underwriting.cirras.mal.gov.bc.ca/v1/"
        },
        "discriminator" : {
          "propertyName" : "@type"
        }
      },
      "CropVariety" : {
        "type" : "object",
        "properties" : {
          "cropVarietyId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "cropCommodityId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "varietyName" : {
            "type" : "string"
          },
          "dataSyncTransDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "insurancePlanId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "isQuantityInsurableInd" : {
            "type" : "boolean"
          },
          "isUnseededInsurableInd" : {
            "type" : "boolean"
          },
          "isPlantInsurableInd" : {
            "type" : "boolean"
          },
          "isAwpEligibleInd" : {
            "type" : "boolean"
          },
          "isUnderseedingEligibleInd" : {
            "type" : "boolean"
          },
          "cropVarietyPlantInsurabilities" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CropVarietyPlantInsurability"
            }
          },
          "cropVarietyCommodityTypes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CropVarietyCommodityType"
            }
          }
        }
      },
      "CropVarietyCommodityType" : {
        "type" : "object",
        "properties" : {
          "commodityTypeCode" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "cropVarietyId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "insurancePlanId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "fullCoverageDeadlineDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "finalCoverageDeadlineDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "CropVarietyPlantInsurability" : {
        "type" : "object",
        "properties" : {
          "cropVarietyId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "plantInsurabilityTypeCode" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "cropVarietyInsurabilityGuid" : {
            "type" : "string"
          },
          "deletedByUserInd" : {
            "type" : "boolean"
          },
          "isUsedInd" : {
            "type" : "boolean"
          }
        }
      },
      "CropVarietyInsurability" : {
        "type" : "object",
        "properties" : {
          "cropVarietyId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "varietyName" : {
            "type" : "string"
          },
          "plantDurationTypeCode" : {
            "type" : "string"
          },
          "cropVarietyInsurabilityGuid" : {
            "type" : "string"
          },
          "isQuantityInsurableInd" : {
            "type" : "boolean"
          },
          "isUnseededInsurableInd" : {
            "type" : "boolean"
          },
          "isPlantInsurableInd" : {
            "type" : "boolean"
          },
          "isAwpEligibleInd" : {
            "type" : "boolean"
          },
          "isUnderseedingEligibleInd" : {
            "type" : "boolean"
          },
          "deletedByUserInd" : {
            "type" : "boolean"
          },
          "isQuantityInsurableEditableInd" : {
            "type" : "boolean"
          },
          "isUnseededInsurableEditableInd" : {
            "type" : "boolean"
          },
          "isPlantInsurableEditableInd" : {
            "type" : "boolean"
          },
          "isAwpEligibleEditableInd" : {
            "type" : "boolean"
          },
          "isUnderseedingEligibleEditableInd" : {
            "type" : "boolean"
          },
          "cropVarietyPlantInsurabilities" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CropVarietyPlantInsurability"
            }
          }
        }
      },
      "CropVarietyInsurabilityListRsrc" : {
        "required" : [ "@type" ],
        "type" : "object",
        "properties" : {
          "links" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/RelLink"
            }
          },
          "collection" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CropVarietyInsurability"
            }
          },
          "etag" : {
            "type" : "string",
            "writeOnly" : true
          },
          "@type" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "CropVarietyInsurabilityList",
          "namespace" : "http://underwriting.cirras.mal.gov.bc.ca/v1/"
        },
        "discriminator" : {
          "propertyName" : "@type"
        }
      },
      "DopYieldContractCommodity" : {
        "type" : "object",
        "properties" : {
          "declaredYieldContractCommodityGuid" : {
            "type" : "string"
          },
          "declaredYieldContractGuid" : {
            "type" : "string"
          },
          "cropCommodityId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "isPedigreeInd" : {
            "type" : "boolean"
          },
          "harvestedAcres" : {
            "type" : "number",
            "format" : "double"
          },
          "storedYield" : {
            "type" : "number",
            "format" : "double"
          },
          "storedYieldDefaultUnit" : {
            "type" : "number",
            "format" : "double"
          },
          "soldYield" : {
            "type" : "number",
            "format" : "double"
          },
          "soldYieldDefaultUnit" : {
            "type" : "number",
            "format" : "double"
          },
          "gradeModifierTypeCode" : {
            "type" : "string"
          },
          "cropCommodityName" : {
            "type" : "string"
          },
          "totalInsuredAcres" : {
            "type" : "number",
            "format" : "double"
          }
        }
      },
      "DopYieldContractRsrc" : {
        "required" : [ "@type" ],
        "type" : "object",
        "properties" : {
          "links" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/RelLink"
            }
          },
          "declaredYieldContractGuid" : {
            "type" : "string"
          },
          "contractId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "cropYear" : {
            "type" : "integer",
            "format" : "int32"
          },
          "declarationOfProductionDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "dopUpdateTimestamp" : {
            "type" : "string",
            "format" : "date-time"
          },
          "dopUpdateUser" : {
            "type" : "string"
          },
          "enteredYieldMeasUnitTypeCode" : {
            "type" : "string"
          },
          "defaultYieldMeasUnitTypeCode" : {
            "type" : "string"
          },
          "grainFromOtherSourceInd" : {
            "type" : "boolean"
          },
          "insurancePlanId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "growerContractYearId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "fields" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AnnualFieldRsrc"
            }
          },
          "uwComments" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UnderwritingComment"
            }
          },
          "dopYieldFieldRollupList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DopYieldFieldRollup"
            }
          },
          "dopYieldContractCommodities" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DopYieldContractCommodity"
            }
          },
          "etag" : {
            "type" : "string",
            "writeOnly" : true
          },
          "@type" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "dopYieldContract",
          "namespace" : "http://underwriting.cirras.mal.gov.bc.ca/v1/"
        },
        "discriminator" : {
          "propertyName" : "@type"
        }
      },
      "DopYieldFieldRollup" : {
        "type" : "object",
        "properties" : {
          "declaredYieldFieldRollupGuid" : {
            "type" : "string"
          },
          "declaredYieldContractGuid" : {
            "type" : "string"
          },
          "cropCommodityId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "isPedigreeInd" : {
            "type" : "boolean"
          },
          "estimatedYieldPerAcreTonnes" : {
            "type" : "number",
            "format" : "double"
          },
          "estimatedYieldPerAcreBushels" : {
            "type" : "number",
            "format" : "double"
          },
          "totalAcres" : {
            "type" : "number",
            "format" : "double"
          },
          "totalYield" : {
            "type" : "number",
            "format" : "double"
          },
          "cropCommodityName" : {
            "type" : "string"
          }
        }
      },
      "FieldRsrc" : {
        "required" : [ "@type" ],
        "type" : "object",
        "properties" : {
          "links" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/RelLink"
            }
          },
          "fieldId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "fieldLabel" : {
            "type" : "string"
          },
          "activeFromCropYear" : {
            "type" : "integer",
            "format" : "int32"
          },
          "activeToCropYear" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalLegalLand" : {
            "type" : "integer",
            "format" : "int32"
          },
          "transactionType" : {
            "type" : "string"
          },
          "etag" : {
            "type" : "string",
            "writeOnly" : true
          },
          "@type" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "Field",
          "namespace" : "http://underwriting.cirras.mal.gov.bc.ca/v1/"
        },
        "discriminator" : {
          "propertyName" : "@type"
        }
      },
      "GradeModifierListRsrc" : {
        "required" : [ "@type" ],
        "type" : "object",
        "properties" : {
          "links" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/RelLink"
            }
          },
          "collection" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/GradeModifierRsrc"
            }
          },
          "etag" : {
            "type" : "string",
            "writeOnly" : true
          },
          "@type" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "GradeModifierList",
          "namespace" : "http://underwriting.cirras.mal.gov.bc.ca/v1/"
        },
        "discriminator" : {
          "propertyName" : "@type"
        }
      },
      "GradeModifierRsrc" : {
        "required" : [ "@type" ],
        "type" : "object",
        "properties" : {
          "links" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/RelLink"
            }
          },
          "gradeModifierGuid" : {
            "type" : "string"
          },
          "cropCommodityId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "cropYear" : {
            "type" : "integer",
            "format" : "int32"
          },
          "gradeModifierTypeCode" : {
            "type" : "string"
          },
          "gradeModifierValue" : {
            "type" : "number",
            "format" : "double"
          },
          "description" : {
            "type" : "string"
          },
          "insurancePlanId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "deleteAllowedInd" : {
            "type" : "boolean"
          },
          "deletedByUserInd" : {
            "type" : "boolean"
          },
          "etag" : {
            "type" : "string",
            "writeOnly" : true
          },
          "@type" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "GradeModifier",
          "namespace" : "http://underwriting.cirras.mal.gov.bc.ca/v1/"
        },
        "discriminator" : {
          "propertyName" : "@type"
        }
      },
      "GradeModifierType" : {
        "type" : "object",
        "properties" : {
          "gradeModifierTypeCode" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "effectiveYear" : {
            "type" : "integer",
            "format" : "int32"
          },
          "expiryYear" : {
            "type" : "integer",
            "format" : "int32"
          },
          "deleteAllowedInd" : {
            "type" : "boolean"
          },
          "deletedByUserInd" : {
            "type" : "boolean"
          },
          "maxYearUsed" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "GradeModifierTypeListRsrc" : {
        "required" : [ "@type" ],
        "type" : "object",
        "properties" : {
          "links" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/RelLink"
            }
          },
          "collection" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/GradeModifierType"
            }
          },
          "etag" : {
            "type" : "string",
            "writeOnly" : true
          },
          "@type" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "GradeModifierTypeList",
          "namespace" : "http://underwriting.cirras.mal.gov.bc.ca/v1/"
        },
        "discriminator" : {
          "propertyName" : "@type"
        }
      },
      "GrowerContactRsrc" : {
        "required" : [ "@type" ],
        "type" : "object",
        "properties" : {
          "links" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/RelLink"
            }
          },
          "growerContactId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "growerId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "contactId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "isPrimaryContactInd" : {
            "type" : "boolean"
          },
          "isActivelyInvolvedInd" : {
            "type" : "boolean"
          },
          "dataSyncTransDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "transactionType" : {
            "type" : "string"
          },
          "etag" : {
            "type" : "string",
            "writeOnly" : true
          },
          "@type" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "GrowerContact",
          "namespace" : "http://underwriting.cirras.mal.gov.bc.ca/v1/"
        },
        "discriminator" : {
          "propertyName" : "@type"
        }
      },
      "GrowerContractYearSyncRsrc" : {
        "required" : [ "@type" ],
        "type" : "object",
        "properties" : {
          "links" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/RelLink"
            }
          },
          "growerContractYearId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "contractId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "growerId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "insurancePlanId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "cropYear" : {
            "type" : "integer",
            "format" : "int32"
          },
          "dataSyncTransDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "transactionType" : {
            "type" : "string"
          },
          "etag" : {
            "type" : "string",
            "writeOnly" : true
          },
          "@type" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "GrowerContractYear",
          "namespace" : "http://underwriting.cirras.mal.gov.bc.ca/v1/"
        },
        "discriminator" : {
          "propertyName" : "@type"
        }
      },
      "GrowerRsrc" : {
        "required" : [ "@type" ],
        "type" : "object",
        "properties" : {
          "links" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/RelLink"
            }
          },
          "growerId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "growerNumber" : {
            "type" : "integer",
            "format" : "int32"
          },
          "growerName" : {
            "type" : "string"
          },
          "growerAddressLine1" : {
            "type" : "string"
          },
          "growerAddressLine2" : {
            "type" : "string"
          },
          "growerPostalCode" : {
            "type" : "string"
          },
          "growerCity" : {
            "type" : "string"
          },
          "cityId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "growerProvince" : {
            "type" : "string"
          },
          "dataSyncTransDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "transactionType" : {
            "type" : "string"
          },
          "etag" : {
            "type" : "string",
            "writeOnly" : true
          },
          "@type" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "grower",
          "namespace" : "http://underwriting.cirras.mal.gov.bc.ca/v1/"
        },
        "discriminator" : {
          "propertyName" : "@type"
        }
      },
      "InventoryContractCommodity" : {
        "type" : "object",
        "properties" : {
          "inventoryContractCommodityGuid" : {
            "type" : "string"
          },
          "inventoryContractGuid" : {
            "type" : "string"
          },
          "cropCommodityId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "cropCommodityName" : {
            "type" : "string"
          },
          "totalUnseededAcres" : {
            "type" : "number",
            "format" : "double"
          },
          "totalUnseededAcresOverride" : {
            "type" : "number",
            "format" : "double"
          },
          "totalSeededAcres" : {
            "type" : "number",
            "format" : "double"
          },
          "totalSpotLossAcres" : {
            "type" : "number",
            "format" : "double"
          },
          "isPedigreeInd" : {
            "type" : "boolean"
          }
        }
      },
      "InventoryContractRsrc" : {
        "required" : [ "@type" ],
        "type" : "object",
        "properties" : {
          "links" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/RelLink"
            }
          },
          "inventoryContractGuid" : {
            "type" : "string"
          },
          "contractId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "cropYear" : {
            "type" : "integer",
            "format" : "int32"
          },
          "growerContractYearId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "insurancePlanId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "insurancePlanName" : {
            "type" : "string"
          },
          "unseededIntentionsSubmittedInd" : {
            "type" : "boolean"
          },
          "seededCropReportSubmittedInd" : {
            "type" : "boolean"
          },
          "fertilizerInd" : {
            "type" : "boolean"
          },
          "herbicideInd" : {
            "type" : "boolean"
          },
          "tilliageInd" : {
            "type" : "boolean"
          },
          "otherChangesInd" : {
            "type" : "boolean"
          },
          "otherChangesComment" : {
            "type" : "string"
          },
          "grainFromPrevYearInd" : {
            "type" : "boolean"
          },
          "invUpdateTimestamp" : {
            "type" : "string",
            "format" : "date-time"
          },
          "invUpdateUser" : {
            "type" : "string"
          },
          "policyNumber" : {
            "type" : "string"
          },
          "growerNumber" : {
            "type" : "integer",
            "format" : "int32"
          },
          "growerName" : {
            "type" : "string"
          },
          "commodities" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/InventoryContractCommodity"
            }
          },
          "inventoryCoverageTotalForages" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/InventoryCoverageTotalForage"
            }
          },
          "fields" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AnnualFieldRsrc"
            }
          },
          "etag" : {
            "type" : "string",
            "writeOnly" : true
          },
          "@type" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "inventoryContract",
          "namespace" : "http://underwriting.cirras.mal.gov.bc.ca/v1/"
        },
        "discriminator" : {
          "propertyName" : "@type"
        }
      },
      "InventoryCoverageTotalForage" : {
        "type" : "object",
        "properties" : {
          "inventoryCoverageTotalForageGuid" : {
            "type" : "string"
          },
          "inventoryContractGuid" : {
            "type" : "string"
          },
          "cropCommodityId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "plantInsurabilityTypeCode" : {
            "type" : "string"
          },
          "totalFieldAcres" : {
            "type" : "number",
            "format" : "double"
          },
          "isUnseededInsurableInd" : {
            "type" : "boolean"
          },
          "cropCommodityName" : {
            "type" : "string"
          },
          "plantInsurabilityTypeDesc" : {
            "type" : "string"
          }
        }
      },
      "InventoryContractListRsrc" : {
        "required" : [ "@type" ],
        "type" : "object",
        "properties" : {
          "links" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/RelLink"
            }
          },
          "pageNumber" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageRowCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalRowCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalPageCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "collection" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/InventoryContractRsrc"
            }
          },
          "etag" : {
            "type" : "string",
            "writeOnly" : true
          },
          "@type" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "inventoryContractList",
          "namespace" : "http://underwriting.cirras.mal.gov.bc.ca/v1/"
        },
        "discriminator" : {
          "propertyName" : "@type"
        }
      },
      "LegalLandRiskArea" : {
        "type" : "object",
        "properties" : {
          "riskAreaId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "insurancePlanId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "riskAreaName" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "legalLandId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "insurancePlanName" : {
            "type" : "string"
          },
          "deletedByUserInd" : {
            "type" : "boolean"
          }
        }
      },
      "LegalLandRsrc" : {
        "required" : [ "@type" ],
        "type" : "object",
        "properties" : {
          "links" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/RelLink"
            }
          },
          "legalLandId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "primaryPropertyIdentifier" : {
            "type" : "string"
          },
          "primaryLandIdentifierTypeCode" : {
            "type" : "string"
          },
          "primaryReferenceTypeCode" : {
            "type" : "string"
          },
          "legalDescription" : {
            "type" : "string"
          },
          "legalShortDescription" : {
            "type" : "string"
          },
          "otherDescription" : {
            "type" : "string"
          },
          "activeFromCropYear" : {
            "type" : "integer",
            "format" : "int32"
          },
          "activeToCropYear" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalAcres" : {
            "type" : "number",
            "format" : "double"
          },
          "transactionType" : {
            "type" : "string"
          },
          "riskAreas" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LegalLandRiskArea"
            }
          },
          "fields" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FieldRsrc"
            }
          },
          "etag" : {
            "type" : "string",
            "writeOnly" : true
          },
          "@type" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "LegalLand",
          "namespace" : "http://underwriting.cirras.mal.gov.bc.ca/v1/"
        },
        "discriminator" : {
          "propertyName" : "@type"
        }
      },
      "LegalLandFieldXrefRsrc" : {
        "required" : [ "@type" ],
        "type" : "object",
        "properties" : {
          "links" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/RelLink"
            }
          },
          "legalLandId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "fieldId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "transactionType" : {
            "type" : "string"
          },
          "etag" : {
            "type" : "string",
            "writeOnly" : true
          },
          "@type" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "LegalLandFieldXref",
          "namespace" : "http://underwriting.cirras.mal.gov.bc.ca/v1/"
        },
        "discriminator" : {
          "propertyName" : "@type"
        }
      },
      "LegalLandListRsrc" : {
        "required" : [ "@type" ],
        "type" : "object",
        "properties" : {
          "links" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/RelLink"
            }
          },
          "pageNumber" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageRowCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalRowCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalPageCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "collection" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LegalLandRsrc"
            }
          },
          "etag" : {
            "type" : "string",
            "writeOnly" : true
          },
          "@type" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "legalLandList",
          "namespace" : "http://underwriting.cirras.mal.gov.bc.ca/v1/"
        },
        "discriminator" : {
          "propertyName" : "@type"
        }
      },
      "PolicyRsrc" : {
        "required" : [ "@type" ],
        "type" : "object",
        "properties" : {
          "links" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/RelLink"
            }
          },
          "policyId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "growerId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "insurancePlanId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "insurancePlanName" : {
            "type" : "string"
          },
          "officeId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "policyStatusCode" : {
            "type" : "string"
          },
          "policyNumber" : {
            "type" : "string"
          },
          "contractNumber" : {
            "type" : "string"
          },
          "contractId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "cropYear" : {
            "type" : "integer",
            "format" : "int32"
          },
          "dataSyncTransDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "transactionType" : {
            "type" : "string"
          },
          "etag" : {
            "type" : "string",
            "writeOnly" : true
          },
          "@type" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "policy",
          "namespace" : "http://underwriting.cirras.mal.gov.bc.ca/v1/"
        },
        "discriminator" : {
          "propertyName" : "@type"
        }
      },
      "RiskAreaListRsrc" : {
        "required" : [ "@type" ],
        "type" : "object",
        "properties" : {
          "links" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/RelLink"
            }
          },
          "collection" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RiskAreaRsrc"
            }
          },
          "etag" : {
            "type" : "string",
            "writeOnly" : true
          },
          "@type" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "RiskAreaList",
          "namespace" : "http://underwriting.cirras.mal.gov.bc.ca/v1/"
        },
        "discriminator" : {
          "propertyName" : "@type"
        }
      },
      "RiskAreaRsrc" : {
        "required" : [ "@type" ],
        "type" : "object",
        "properties" : {
          "links" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/RelLink"
            }
          },
          "riskAreaId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "insurancePlanId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "riskAreaName" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "effectiveDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "expiryDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "legalLandId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "insurancePlanName" : {
            "type" : "string"
          },
          "etag" : {
            "type" : "string",
            "writeOnly" : true
          },
          "@type" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "RiskArea",
          "namespace" : "http://underwriting.cirras.mal.gov.bc.ca/v1/"
        },
        "discriminator" : {
          "propertyName" : "@type"
        }
      },
      "SeedingDeadline" : {
        "type" : "object",
        "properties" : {
          "seedingDeadlineGuid" : {
            "type" : "string"
          },
          "commodityTypeCode" : {
            "type" : "string"
          },
          "cropYear" : {
            "type" : "integer",
            "format" : "int32"
          },
          "fullCoverageDeadlineDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "finalCoverageDeadlineDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "fullCoverageDeadlineDateDefault" : {
            "type" : "string",
            "format" : "date-time"
          },
          "finalCoverageDeadlineDateDefault" : {
            "type" : "string",
            "format" : "date-time"
          },
          "deletedByUserInd" : {
            "type" : "boolean"
          }
        }
      },
      "SeedingDeadlineListRsrc" : {
        "required" : [ "@type" ],
        "type" : "object",
        "properties" : {
          "links" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/RelLink"
            }
          },
          "collection" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SeedingDeadline"
            }
          },
          "etag" : {
            "type" : "string",
            "writeOnly" : true
          },
          "@type" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "SeedingDeadlineList",
          "namespace" : "http://underwriting.cirras.mal.gov.bc.ca/v1/"
        },
        "discriminator" : {
          "propertyName" : "@type"
        }
      },
      "EndpointsRsrc" : {
        "required" : [ "@type" ],
        "type" : "object",
        "properties" : {
          "links" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/RelLink"
            }
          },
          "releaseVersion" : {
            "type" : "string"
          },
          "etag" : {
            "type" : "string",
            "writeOnly" : true
          },
          "@type" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "endpoints",
          "namespace" : "http://underwriting.cirras.mal.gov.bc.ca/v1/"
        },
        "discriminator" : {
          "propertyName" : "@type"
        }
      },
      "SyncCodeRsrc" : {
        "required" : [ "@type" ],
        "type" : "object",
        "properties" : {
          "links" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/RelLink"
            }
          },
          "codeTableType" : {
            "type" : "string"
          },
          "uniqueKeyString" : {
            "type" : "string"
          },
          "uniqueKeyInteger" : {
            "type" : "integer",
            "format" : "int32"
          },
          "description" : {
            "type" : "string"
          },
          "isActive" : {
            "type" : "boolean"
          },
          "dataSyncTransDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "transactionType" : {
            "type" : "string"
          },
          "etag" : {
            "type" : "string",
            "writeOnly" : true
          },
          "@type" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "syncCode",
          "namespace" : "http://underwriting.cirras.mal.gov.bc.ca/v1/"
        },
        "discriminator" : {
          "propertyName" : "@type"
        }
      },
      "SyncCommodityTypeVarietyXrefRsrc" : {
        "required" : [ "@type" ],
        "type" : "object",
        "properties" : {
          "links" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/RelLink"
            }
          },
          "commodityTypeCode" : {
            "type" : "string"
          },
          "cropVarietyId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "dataSyncTransDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "transactionType" : {
            "type" : "string"
          },
          "etag" : {
            "type" : "string",
            "writeOnly" : true
          },
          "@type" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "CommodityTypeVarietyXref",
          "namespace" : "http://underwriting.cirras.mal.gov.bc.ca/v1/"
        },
        "discriminator" : {
          "propertyName" : "@type"
        }
      },
      "SyncCommodityVariety" : {
        "type" : "object",
        "properties" : {
          "shortLabel" : {
            "type" : "string"
          },
          "parentCropId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "cropName" : {
            "type" : "string"
          },
          "cropId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "isYieldCrop" : {
            "type" : "boolean"
          },
          "insurancePlanId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "plantDurationTypeCode" : {
            "type" : "string"
          },
          "isCropInsuranceEligibleInd" : {
            "type" : "boolean"
          },
          "isOtherInsuranceEligibleInd" : {
            "type" : "boolean"
          },
          "yieldMeasUnitTypeCode" : {
            "type" : "string"
          },
          "yieldDecimalPrecision" : {
            "type" : "integer",
            "format" : "int32"
          },
          "dataSyncTransDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "isProductInsurableInd" : {
            "type" : "boolean"
          },
          "isPlantInsuranceEligibleInd" : {
            "type" : "boolean"
          },
          "isInventoryCrop" : {
            "type" : "boolean"
          },
          "isUnderwritingCrop" : {
            "type" : "boolean"
          },
          "transactionType" : {
            "type" : "string"
          }
        }
      },
      "SyncCommodityVarietyRsrc" : {
        "required" : [ "@type" ],
        "type" : "object",
        "properties" : {
          "links" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/RelLink"
            }
          },
          "cropId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "cropName" : {
            "type" : "string"
          },
          "parentCropId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "isInventoryCrop" : {
            "type" : "boolean"
          },
          "insurancePlanId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "shortLabel" : {
            "type" : "string"
          },
          "plantDurationTypeCode" : {
            "type" : "string"
          },
          "isYieldCrop" : {
            "type" : "boolean"
          },
          "isUnderwritingCrop" : {
            "type" : "boolean"
          },
          "isProductInsurableInd" : {
            "type" : "boolean"
          },
          "isCropInsuranceEligibleInd" : {
            "type" : "boolean"
          },
          "isPlantInsuranceEligibleInd" : {
            "type" : "boolean"
          },
          "isOtherInsuranceEligibleInd" : {
            "type" : "boolean"
          },
          "yieldMeasUnitTypeCode" : {
            "type" : "string"
          },
          "yieldDecimalPrecision" : {
            "type" : "integer",
            "format" : "int32"
          },
          "dataSyncTransDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "transactionType" : {
            "type" : "string"
          },
          "etag" : {
            "type" : "string",
            "writeOnly" : true
          },
          "@type" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "syncCommodityVariety",
          "namespace" : "http://underwriting.cirras.mal.gov.bc.ca/v1/"
        },
        "discriminator" : {
          "propertyName" : "@type"
        }
      },
      "UnderwritingYearRsrc" : {
        "required" : [ "@type" ],
        "type" : "object",
        "properties" : {
          "links" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/RelLink"
            }
          },
          "underwritingYearGuid" : {
            "type" : "string"
          },
          "cropYear" : {
            "type" : "integer",
            "format" : "int32"
          },
          "etag" : {
            "type" : "string",
            "writeOnly" : true
          },
          "@type" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "UnderwritingYear",
          "namespace" : "http://underwriting.cirras.mal.gov.bc.ca/v1/"
        },
        "discriminator" : {
          "propertyName" : "@type"
        }
      },
      "UnderwritingYearListRsrc" : {
        "required" : [ "@type" ],
        "type" : "object",
        "properties" : {
          "links" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/RelLink"
            }
          },
          "collection" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UnderwritingYearRsrc"
            }
          },
          "etag" : {
            "type" : "string",
            "writeOnly" : true
          },
          "@type" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "UnderwritingYearList",
          "namespace" : "http://underwriting.cirras.mal.gov.bc.ca/v1/"
        },
        "discriminator" : {
          "propertyName" : "@type"
        }
      },
      "UwContractRsrc" : {
        "required" : [ "@type" ],
        "type" : "object",
        "properties" : {
          "links" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/RelLink"
            }
          },
          "contractId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "contractNumber" : {
            "type" : "string"
          },
          "cropYear" : {
            "type" : "integer",
            "format" : "int32"
          },
          "insurancePlanId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "insurancePlanName" : {
            "type" : "string"
          },
          "policyId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "policyNumber" : {
            "type" : "string"
          },
          "policyStatusCode" : {
            "type" : "string"
          },
          "policyStatus" : {
            "type" : "string"
          },
          "growerContractYearId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "growerId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "growerNumber" : {
            "type" : "integer",
            "format" : "int32"
          },
          "growerName" : {
            "type" : "string"
          },
          "growerAddressLine1" : {
            "type" : "string"
          },
          "growerAddressLine2" : {
            "type" : "string"
          },
          "growerPostalCode" : {
            "type" : "string"
          },
          "growerCity" : {
            "type" : "string"
          },
          "growerProvince" : {
            "type" : "string"
          },
          "growerPrimaryEmail" : {
            "type" : "string"
          },
          "growerPrimaryPhone" : {
            "type" : "string"
          },
          "inventoryContractGuid" : {
            "type" : "string"
          },
          "declaredYieldContractGuid" : {
            "type" : "string"
          },
          "totalDopEligibleInventory" : {
            "type" : "integer",
            "format" : "int32"
          },
          "etag" : {
            "type" : "string",
            "writeOnly" : true
          },
          "@type" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "uwContract",
          "namespace" : "http://underwriting.cirras.mal.gov.bc.ca/v1/"
        },
        "discriminator" : {
          "propertyName" : "@type"
        }
      },
      "UwContractListRsrc" : {
        "required" : [ "@type" ],
        "type" : "object",
        "properties" : {
          "links" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/RelLink"
            }
          },
          "pageNumber" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageRowCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalRowCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalPageCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "collection" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UwContractRsrc"
            }
          },
          "etag" : {
            "type" : "string",
            "writeOnly" : true
          },
          "@type" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "uwContractList",
          "namespace" : "http://underwriting.cirras.mal.gov.bc.ca/v1/"
        },
        "discriminator" : {
          "propertyName" : "@type"
        }
      },
      "AddFieldValidationRsrc" : {
        "required" : [ "@type" ],
        "type" : "object",
        "properties" : {
          "links" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/RelLink"
            }
          },
          "warningMessages" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MessageRsrc"
            }
          },
          "errorMessages" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MessageRsrc"
            }
          },
          "etag" : {
            "type" : "string",
            "writeOnly" : true
          },
          "@type" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "addFieldValidation",
          "namespace" : "http://underwriting.cirras.mal.gov.bc.ca/v1/"
        },
        "discriminator" : {
          "propertyName" : "@type"
        }
      },
      "RemoveFieldValidationRsrc" : {
        "required" : [ "@type" ],
        "type" : "object",
        "properties" : {
          "links" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/RelLink"
            }
          },
          "isRemoveFromPolicyAllowed" : {
            "type" : "boolean"
          },
          "isDeleteFieldAllowed" : {
            "type" : "boolean"
          },
          "removeFromPolicyWarnings" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MessageRsrc"
            }
          },
          "deleteFieldErrors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MessageRsrc"
            }
          },
          "etag" : {
            "type" : "string",
            "writeOnly" : true
          },
          "@type" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "removeFieldValidation",
          "namespace" : "http://underwriting.cirras.mal.gov.bc.ca/v1/"
        },
        "discriminator" : {
          "propertyName" : "@type"
        }
      },
      "RenameLegalValidationRsrc" : {
        "required" : [ "@type" ],
        "type" : "object",
        "properties" : {
          "links" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/RelLink"
            }
          },
          "isWarningLegalsWithSameLoc" : {
            "type" : "boolean"
          },
          "legalsWithSameLocMsg" : {
            "$ref" : "#/components/schemas/MessageRsrc"
          },
          "legalsWithSameLocList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LegalLandRsrc"
            }
          },
          "isWarningOtherFieldOnPolicy" : {
            "type" : "boolean"
          },
          "otherFieldOnPolicyMsg" : {
            "$ref" : "#/components/schemas/MessageRsrc"
          },
          "otherFieldOnPolicyList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AnnualFieldRsrc"
            }
          },
          "isWarningFieldOnOtherPolicy" : {
            "type" : "boolean"
          },
          "fieldOnOtherPolicyMsg" : {
            "$ref" : "#/components/schemas/MessageRsrc"
          },
          "fieldOnOtherPolicyList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AnnualFieldRsrc"
            }
          },
          "isWarningOtherLegalData" : {
            "type" : "boolean"
          },
          "otherLegalDataMsg" : {
            "$ref" : "#/components/schemas/MessageRsrc"
          },
          "otherLegalData" : {
            "$ref" : "#/components/schemas/LegalLandRsrc"
          },
          "etag" : {
            "type" : "string",
            "writeOnly" : true
          },
          "@type" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "renameLegalValidation",
          "namespace" : "http://underwriting.cirras.mal.gov.bc.ca/v1/"
        },
        "discriminator" : {
          "propertyName" : "@type"
        }
      },
      "ReplaceLegalValidationRsrc" : {
        "required" : [ "@type" ],
        "type" : "object",
        "properties" : {
          "links" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/RelLink"
            }
          },
          "isWarningFieldOnOtherPolicy" : {
            "type" : "boolean"
          },
          "fieldOnOtherPolicyMsg" : {
            "$ref" : "#/components/schemas/MessageRsrc"
          },
          "isWarningFieldHasOtherLegalLand" : {
            "type" : "boolean"
          },
          "fieldHasOtherLegalLandMsg" : {
            "$ref" : "#/components/schemas/MessageRsrc"
          },
          "otherLegalLandOfFieldList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LegalLandRsrc"
            }
          },
          "isWarningOtherFieldsOnLegal" : {
            "type" : "boolean"
          },
          "otherFieldsOnLegalMsg" : {
            "$ref" : "#/components/schemas/MessageRsrc"
          },
          "otherFieldsOnLegalLandList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AnnualFieldRsrc"
            }
          },
          "etag" : {
            "type" : "string",
            "writeOnly" : true
          },
          "@type" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "replaceLegalValidation",
          "namespace" : "http://underwriting.cirras.mal.gov.bc.ca/v1/"
        },
        "discriminator" : {
          "propertyName" : "@type"
        }
      },
      "YieldMeasUnitConversion" : {
        "type" : "object",
        "properties" : {
          "yieldMeasUnitConversionGuid" : {
            "type" : "string"
          },
          "cropCommodityId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "srcYieldMeasUnitTypeCode" : {
            "type" : "string"
          },
          "targetYieldMeasUnitTypeCode" : {
            "type" : "string"
          },
          "versionNumber" : {
            "type" : "integer",
            "format" : "int32"
          },
          "effectiveCropYear" : {
            "type" : "integer",
            "format" : "int32"
          },
          "expiryCropYear" : {
            "type" : "integer",
            "format" : "int32"
          },
          "conversionFactor" : {
            "type" : "number",
            "format" : "double"
          },
          "insurancePlanId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "commodityName" : {
            "type" : "string"
          },
          "deletedByUserInd" : {
            "type" : "boolean"
          }
        }
      },
      "YieldMeasUnitConversionListRsrc" : {
        "required" : [ "@type" ],
        "type" : "object",
        "properties" : {
          "links" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/RelLink"
            }
          },
          "collection" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/YieldMeasUnitConversion"
            }
          },
          "etag" : {
            "type" : "string",
            "writeOnly" : true
          },
          "@type" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "YieldMeasUnitConversionList",
          "namespace" : "http://underwriting.cirras.mal.gov.bc.ca/v1/"
        },
        "discriminator" : {
          "propertyName" : "@type"
        }
      },
      "YieldMeasUnitTypeCodeListRsrc" : {
        "required" : [ "@type" ],
        "type" : "object",
        "properties" : {
          "links" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/RelLink"
            }
          },
          "collection" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/YieldMeasUnitTypeCodeRsrc"
            }
          },
          "etag" : {
            "type" : "string",
            "writeOnly" : true
          },
          "@type" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "YieldMeasUnitTypeCodeList",
          "namespace" : "http://underwriting.cirras.mal.gov.bc.ca/v1/"
        },
        "discriminator" : {
          "propertyName" : "@type"
        }
      },
      "YieldMeasUnitTypeCodeRsrc" : {
        "required" : [ "@type" ],
        "type" : "object",
        "properties" : {
          "links" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/RelLink"
            }
          },
          "yieldMeasUnitTypeCode" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "decimalPrecision" : {
            "type" : "integer",
            "format" : "int32"
          },
          "effectiveDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "expiryDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "isDefaultYieldUnitInd" : {
            "type" : "boolean"
          },
          "insurancePlanId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "etag" : {
            "type" : "string",
            "writeOnly" : true
          },
          "@type" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "YieldMeasUnitTypeCode",
          "namespace" : "http://underwriting.cirras.mal.gov.bc.ca/v1/"
        },
        "discriminator" : {
          "propertyName" : "@type"
        }
      },
      "CodeHierarchyRsrc" : {
        "required" : [ "@type" ],
        "type" : "object",
        "properties" : {
          "links" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/RelLink"
            }
          },
          "codeHierarchyName" : {
            "type" : "string"
          },
          "lowerCodeTableName" : {
            "type" : "string"
          },
          "upperCodeTableName" : {
            "type" : "string"
          },
          "hierarchy" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Hierarchy"
            }
          },
          "etag" : {
            "type" : "string",
            "writeOnly" : true
          },
          "@type" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "codeHierarchy",
          "namespace" : "http://common.wfone.nrs.gov.bc.ca/v1/"
        },
        "discriminator" : {
          "propertyName" : "@type"
        }
      },
      "Hierarchy" : {
        "type" : "object",
        "properties" : {
          "lowerCode" : {
            "type" : "string"
          },
          "upperCode" : {
            "type" : "string"
          },
          "effectiveDate" : {
            "type" : "string",
            "format" : "date"
          },
          "expiryDate" : {
            "type" : "string",
            "format" : "date"
          }
        }
      },
      "CodeHierarchyListRsrc" : {
        "required" : [ "@type" ],
        "type" : "object",
        "properties" : {
          "links" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/RelLink"
            }
          },
          "codeHierarchyList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CodeHierarchyRsrc"
            }
          },
          "etag" : {
            "type" : "string",
            "writeOnly" : true
          },
          "@type" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "codeHierarchies",
          "namespace" : "http://common.wfone.nrs.gov.bc.ca/v1/"
        },
        "discriminator" : {
          "propertyName" : "@type"
        }
      },
      "CodeRsrc" : {
        "required" : [ "@type" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "displayOrder" : {
            "type" : "integer",
            "format" : "int32"
          },
          "effectiveDate" : {
            "type" : "string"
          },
          "expiryDate" : {
            "type" : "string"
          },
          "@type" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "code",
          "namespace" : "http://common.wfone.nrs.gov.bc.ca/v1/"
        },
        "discriminator" : {
          "propertyName" : "@type"
        }
      },
      "CodeTableRsrc" : {
        "required" : [ "@type" ],
        "type" : "object",
        "properties" : {
          "links" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/RelLink"
            }
          },
          "codeTableName" : {
            "type" : "string"
          },
          "codes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CodeRsrc"
            }
          },
          "etag" : {
            "type" : "string",
            "writeOnly" : true
          },
          "@type" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "codeTable",
          "namespace" : "http://common.wfone.nrs.gov.bc.ca/v1/"
        },
        "discriminator" : {
          "propertyName" : "@type"
        }
      },
      "CodeTableListRsrc" : {
        "required" : [ "@type" ],
        "type" : "object",
        "properties" : {
          "links" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/RelLink"
            }
          },
          "codeTableList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CodeTableRsrc"
            }
          },
          "etag" : {
            "type" : "string",
            "writeOnly" : true
          },
          "@type" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "codeTables",
          "namespace" : "http://common.wfone.nrs.gov.bc.ca/v1/"
        },
        "discriminator" : {
          "propertyName" : "@type"
        }
      },
      "HealthCheckResponseRsrc" : {
        "required" : [ "@type" ],
        "type" : "object",
        "properties" : {
          "componentIdentifier" : {
            "type" : "string"
          },
          "componentName" : {
            "type" : "string"
          },
          "validationStatus" : {
            "type" : "string",
            "enum" : [ "RED", "YELLOW", "GREEN" ]
          },
          "statusDetails" : {
            "type" : "string"
          },
          "dependencyComponentResponses" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/HealthCheckResponseRsrc"
            }
          },
          "@type" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "HealthCheckResponse",
          "namespace" : "http://common.wfone.nrs.gov.bc.ca/v1/"
        },
        "discriminator" : {
          "propertyName" : "@type"
        }
      }
    }
  }
}