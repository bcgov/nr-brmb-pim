apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: '#{NAMESPACE}#'
  name: 'cirras-underwriting-jasper-deployment-#{ENV}#'
spec:
  selector:
    matchLabels:
      app: cirras-underwriting-jasper-#{ENV}#
  replicas: 1
  template:
    metadata:
      labels:
        app: cirras-underwriting-jasper-#{ENV}#
        project: brmb-pim-#{ENV}#
      annotations:
        # 1. Vault injector configuration goes here, inside the template.
        vault.hashicorp.com/agent-inject: 'true'
        vault.hashicorp.com/agent-inject-token: 'false' # set to 'true' if you are going to connect and query vault from your application
        vault.hashicorp.com/agent-pre-populate-only: 'true' # this makes sure the secret vault will only change during pod restart
        vault.hashicorp.com/auth-path: auth/k8s-silver  # Must match cluster. Use one of: k8s-silver, k8s-gold, k8s-golddr, k8s-emerald
        vault.hashicorp.com/namespace: platform-services
        vault.hashicorp.com/role: #{LICENSE_PLATE}#-#{VAULT_RESOURCE}#  # licenseplate-nonprod or licenseplate-prod are your options
        # Configure how to retrieve and populate the secrets from Vault:
        # - The name of the secret is any unique string after vault.hashicorp.com/agent-inject-secret-<name>
        # - The value is the path in Vault where the secret is located.
        vault.hashicorp.com/agent-inject-secret-env: #{LICENSE_PLATE}#-#{VAULT_RESOURCE}#/data/#{ENV}#/secrets
        # - The template Vault Agent should use for rendering a secret:
        vault.hashicorp.com/agent-inject-template-env: |
          {{- with secret "#{LICENSE_PLATE}#-#{VAULT_RESOURCE}#/data/#{ENV}#/secrets" }}
            export JASPERREPORTS_DATABASE_USER="{{ .Data.data.JASPER_DATABASE_USER }}"
            export MARIADB_USER="{{ .Data.data.JASPER_DATABASE_USER }}"
            export JASPERREPORTS_DATABASE_PASSWORD="{{ .Data.data.JASPER_DATABASE_PASSWORD }}"
            export MARIADB_PASSWORD="{{ .Data.data.JASPER_DATABASE_PASSWORD }}"
            export JASPERREPORTS_PASSWORD="{{ .Data.data.JASPER_PASSWORD }}"
          {{- end }}          
    spec:
      serviceAccountName: #{LICENSE_PLATE}#-vault
      volumes:
        - name: jasper-#{ENV}#
          persistentVolumeClaim:
            claimName: jasper-#{ENV}#
        - name: mariadb-#{ENV}#
          persistentVolumeClaim:
            claimName: mariadb-#{ENV}#
      containers:
        - name: mariadb-#{ENV}#
          resources:
            requests:
              cpu: 50m
              memory: 100Mi
            limits:
              cpu: 100m
              memory: 400Mi 
          image: >-
            docker.io/bitnami/mariadb:latest
          command:
            ['sh', '-c']
          args:
            ['. /vault/secrets/env && catalina.sh run']
          env:
            - name: ALLOW_EMPTY_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: cirras-underwriting-jasper-config-#{ENV}#
                  key: ALLOW_EMPTY_PASSWORD
            - name: MARIADB_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: cirras-underwriting-jasper-config-#{ENV}#
                  key: JASPERREPORTS_DATABASE_NAME  
            - name: MARIADB_EXTRA_FLAGS
              value: '--innodb_log_file_size=#{MARIADB_MAX_LOG_BYTES}#'
          volumeMounts:
            - name: mariadb-#{ENV}#
              mountPath: /bitnami/mariadb
        - name: jasperreports-#{ENV}#
          resources:
            requests:
              cpu: #{JASPER_CPU_REQUEST}#
              memory: #{JASPER_MEMORY_REQUEST}#
            limits:
              cpu: #{JASPER_CPU_LIMIT}#
              memory: #{JASPER_MEMORY_LIMIT}#
          image: >-
            docker.io/bitnami/jasperreports-archived:latest
          command:
            ['sh', '-c']
          args:
            ['. /vault/secrets/env && catalina.sh run']
          ports:
            - containerPort: 8080
              protocol: TCP
            - containerPort: 8443
              protocol: TCP
          env:
            - name: JASPERREPORTS_DATABASE_NAME
              valueFrom:
                configMapKeyRef:
                  name: cirras-underwriting-jasper-config-#{ENV}#
                  key: JASPERREPORTS_DATABASE_NAME  
            - name: JASPERREPORTS_DATABASE_HOST
              value: localhost
            - name: JASPERREPORTS_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: cirras-underwriting-jasper-config-#{ENV}#
                  key: JASPERREPORTS_UI_USER
          volumeMounts:
            - name: jasper-#{ENV}#
              mountPath: /bitnami/jasperreports
  strategy:
    type: Recreate
