apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: '#{NAMESPACE}#'
  name: cirras-underwriting-api-deployment-#{ENV}#
  annotations: {}
spec:
  selector:
    matchLabels:
      app: cirras-underwriting-api-#{ENV}#
  replicas: 1
  template:
    metadata:
      labels:
        app: cirras-underwriting-api-#{ENV}#
        project: brmb-pim-#{ENV}#
    spec:
      containers:
        - name: container
          image: '#{IMAGE_BY_DIGEST}#'
          imagePullPolicy: Always
          ports:
            - containerPort: #{TOMCAT_PORT}#
              protocol: TCP
          env:
            - name: TOMCAT_PORT
              valueFrom: 
                configMapKeyRef:
                  name: cirras-underwriting-api-config-#{ENV}#
                  key: TOMCAT_PORT
            - name: TOMCAT_MAX_THREADS
              valueFrom: 
                configMapKeyRef:
                  name: cirras-underwriting-api-config-#{ENV}#
                  key: TOMCAT_MAX_THREADS
            - name: CONNECTION_TIMEOUT
              valueFrom:
                configMapKeyRef:
                  name: cirras-underwriting-api-config-#{ENV}#
                  key: CONNECTION_TIMEOUT

            - name: WEBADE_GET_TOKEN_URL
              valueFrom:
                configMapKeyRef:
                  name: cirras-underwriting-api-config-#{ENV}#
                  key: WEBADE_GET_TOKEN_URL
            - name: WEBADE_CHECK_TOKEN_URL
              valueFrom:
                configMapKeyRef:
                  name: cirras-underwriting-api-config-#{ENV}#
                  key: WEBADE_CHECK_TOKEN_URL
            - name: WEBADE_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: cirras-underwriting-api-config-#{ENV}#
                  key: WEBADE_USERNAME
            - name: WEBADE_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: cirras-underwriting-api-config-#{ENV}#
                  key: WEBADE_PASSWORD
            - name: WEBADE_MAXACTIVE
              valueFrom:
                configMapKeyRef:
                  name: cirras-underwriting-api-config-#{ENV}#
                  key: WEBADE_MAXACTIVE
            - name: WEBADE_OAUTH2_AUTHORIZE_URL
              valueFrom:
                configMapKeyRef:
                  name: cirras-underwriting-api-config-#{ENV}#
                  key: WEBADE_OAUTH2_AUTHORIZE_URL
            - name: POSTGRES_RESOURCE_NAME
              valueFrom:
                configMapKeyRef:
                  name: cirras-underwriting-api-config-#{ENV}#
                  key: POSTGRES_RESOURCE_NAME
            - name: POSTGRES_URL
              valueFrom:
                configMapKeyRef:
                  name: cirras-underwriting-api-config-#{ENV}#
                  key: POSTGRES_URL
            - name: POSTGRES_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: cirras-underwriting-api-config-#{ENV}#
                  key: POSTGRES_USERNAME
            - name: POSTGRES_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: cirras-underwriting-api-config-#{ENV}#
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_MAXACTIVE
              valueFrom:
                configMapKeyRef:
                  name: cirras-underwriting-api-config-#{ENV}#
                  key: POSTGRES_MAXACTIVE
            - name: CIRRAS_UNDERWRITING_REST_CLIENT_ID
              valueFrom:
                configMapKeyRef:
                  name: cirras-underwriting-api-config-#{ENV}#
                  key: CIRRAS_UNDERWRITING_REST_CLIENT_ID
            - name: CIRRAS_UNDERWRITING_REST_SECRET
              valueFrom:
                configMapKeyRef:
                  name: cirras-underwriting-api-config-#{ENV}#
                  key: CIRRAS_UNDERWRITING_REST_SECRET
            - name: CIRRAS_POLICIES_API_URL
              valueFrom:
                configMapKeyRef:
                  name: cirras-underwriting-api-config-#{ENV}#
                  key: CIRRAS_POLICIES_API_URL
            - name: JASPER_URL
              valueFrom:
                configMapKeyRef:
                  name: cirras-underwriting-api-config-#{ENV}#
                  key: JASPER_URL
            - name: JASPER_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: cirras-underwriting-api-config-#{ENV}#
                  key: JASPER_USERNAME
            - name: JASPER_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: cirras-underwriting-api-config-#{ENV}#
                  key: JASPER_PASSWORD
            - name: TZ
              valueFrom:
                configMapKeyRef:
                  name: cirras-underwriting-api-config-#{ENV}#
                  key: TIME_ZONE
            - name: LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  name: cirras-underwriting-api-config-#{ENV}#
                  key: LOG_LEVEL
          livenessProbe:
            httpGet:
              scheme: HTTP
              path: /cirras-underwriting-api/v1/checkHealth?callStack=test
              port: #{TOMCAT_PORT}#
            initialDelaySeconds: 120
            periodSeconds: 15
            timeoutSeconds: 15
            failureThreshold: 2
          resources:
            requests:
              cpu: #{API_CPU_REQUEST}#
              memory: #{API_MEMORY_REQUEST}#
            limits:
              cpu: #{API_CPU_LIMIT}#
              memory: #{API_MEMORY_LIMIT}#
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  paused: false
