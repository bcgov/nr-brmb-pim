<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ca.bc.gov.mal.cirras.underwriting.persistence.v1.dao.mybatis.mapper.FieldMapper">

	<resultMap id="FieldDtoMap" type="ca.bc.gov.mal.cirras.underwriting.persistence.v1.dto.FieldDto">
	
		<id property="fieldId" column="field_id" javaType="java.lang.Integer" jdbcType="NUMERIC" />

		<result property="fieldLabel" column="field_label" javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="activeFromCropYear" column="active_from_crop_year" javaType="java.lang.Integer" jdbcType="NUMERIC" />
		<result property="activeToCropYear" column="active_to_crop_year" javaType="java.lang.Integer" jdbcType="NUMERIC" />
		<result property="createUser" column="create_user" javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="createDate" column="create_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
		<result property="updateUser" column="update_user" javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="updateDate" column="update_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />

		<result property="maxCropYear" column="max_crop_year" javaType="java.lang.Integer" jdbcType="NUMERIC" />
		<result property="legalLandId" column="legal_land_id" javaType="java.lang.Integer" jdbcType="NUMERIC" />
		<result property="otherLegalDescription" column="other_description" javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="totalLegalLand" column="total_legal_land" javaType="java.lang.Integer" jdbcType="NUMERIC" />
		
	</resultMap>
	
    <sql id="selectColumns">
		SELECT  field_id,
				field_label,
				active_from_crop_year,
				active_to_crop_year,
				create_user, 
				create_date, 
				update_user, 
				update_date
    </sql>
	
	<select id="fetchAll" resultMap="FieldDtoMap">  
		<include refid="selectColumns"/>
		FROM field
		ORDER BY field_label
	</select> 

	
	<select id="fetch" resultMap="FieldDtoMap">
		<include refid="selectColumns"/>
		FROM field t
		WHERE t.field_id = #{fieldId}
	</select>
	
	<select id="selectForLegalLandOrField" resultMap="FieldDtoMap">  
		SELECT 	f.field_id, 
				f.field_label, 
				afd.legal_land_id,
				ll.other_description,
				MAX(afd.crop_year) AS max_crop_year
		FROM field f
		join annual_field_detail afd on f.field_id = afd.field_id
		left join legal_land ll on ll.legal_land_id = afd.legal_land_id
		WHERE afd.crop_year <![CDATA[ <= ]]> #{cropYear}
		AND #{cropYear} BETWEEN f.active_from_crop_year AND COALESCE(f.active_to_crop_year, #{cropYear})
 	    <if test="legalLandId != null">
 		  AND afd.legal_land_id = #{legalLandId}
	    </if>
 	    <if test="fieldId != null">
 		  AND afd.field_id = #{fieldId}
	    </if>
		GROUP BY f.field_id, f.field_label, afd.legal_land_id, ll.other_description
		HAVING MAX(afd.crop_year) = ( SELECT MAX(a.crop_year) 
									  FROM annual_field_detail a 
									  WHERE a.crop_year <![CDATA[ <= ]]> #{cropYear} 
									  AND a.field_id = f.field_id
									)
		ORDER BY field_label
	</select> 

	<select id="selectByLastPolicyForLegalLand" resultMap="FieldDtoMap">  
		SELECT 	f.field_id, 
				f.field_label, 
				MAX(afd.crop_year) AS max_crop_year
		FROM field f
		JOIN annual_field_detail afd ON f.field_id = afd.field_id
		WHERE afd.legal_land_id = #{legalLandId}
		AND afd.crop_year <![CDATA[ <= ]]> #{cropYear}
		AND exists (SELECT 1
					FROM contracted_field_detail cfd
					JOIN grower_contract_year gcy ON gcy.grower_contract_year_id = cfd.grower_contract_year_id
					JOIN policy p ON p.contract_id = gcy.contract_id and p.crop_year = gcy.crop_year
					WHERE cfd.annual_field_detail_id = afd.annual_field_detail_id
					<if test="includeContractId != null">
						AND p.contract_id = #{includeContractId}
					</if>
					<if test="excludeContractId != null">
						AND p.contract_id <![CDATA[ <> ]]> #{excludeContractId}
					</if>
					)
		<if test="excludeFieldId != null">
			AND f.field_id <![CDATA[ <> ]]> #{excludeFieldId}
		</if>
		GROUP BY f.field_id, f.field_label
		ORDER BY field_label
	</select>


	<select id="selectOtherFieldsForLegalLand" resultMap="FieldDtoMap">  
		SELECT 	f.field_id, 
				f.field_label, 
				last_policy.max_crop_year
		FROM field f
		JOIN legal_land_field_xref llx ON llx.field_id = f.field_id
		LEFT JOIN
		(
			SELECT afd.field_id, MAX(afd.crop_year) AS max_crop_year
			FROM annual_field_detail afd
			JOIN contracted_field_detail cfd ON cfd.annual_field_detail_id = afd.annual_field_detail_id
			JOIN grower_contract_year gcy ON gcy.grower_contract_year_id = cfd.grower_contract_year_id
			JOIN policy p ON p.contract_id = gcy.contract_id and p.crop_year = gcy.crop_year
			AND afd.crop_year <![CDATA[ <= ]]> #{cropYear}
			GROUP BY afd.field_id
		) AS last_policy ON last_policy.field_id = f.field_id
		WHERE  llx.legal_land_id = #{legalLandId}
		AND llx.field_id <![CDATA[ <> ]]> #{excludeFieldId}
		ORDER BY field_label
	</select>
	
	<select id="selectForLegalLand" resultMap="FieldDtoMap">
		SELECT f.field_id, 
			   f.field_label,
			   (select count(xref.field_id) from legal_land_field_xref xref where xref.field_id = f.field_id) AS total_legal_land
		FROM field f
		JOIN legal_land_field_xref xref ON xref.field_id = f.field_id
		WHERE xref.legal_land_id = #{legalLandId}
		ORDER BY f.field_label
	</select>
	
	<insert id="insert">

		<selectKey keyProperty="fieldId" resultType="java.lang.Integer" order="BEFORE"> 
			SELECT nextval('fld_seq')
		</selectKey>
		
		INSERT INTO field (
			field_id,
			field_label,
			active_from_crop_year,
			active_to_crop_year,
			create_user,
			create_date,
			update_user,
			update_date
		) 
		VALUES (
			#{fieldId},
			#{dto.fieldLabel, javaType=java.lang.String , jdbcType=VARCHAR, mode=IN},
			#{dto.activeFromCropYear, javaType=java.lang.Integer , jdbcType=NUMERIC, mode=IN},
			#{dto.activeToCropYear, javaType=java.lang.Integer , jdbcType=NUMERIC, mode=IN},
			#{userId, javaType=java.lang.String, jdbcType=VARCHAR, mode=IN},
			now(),
			#{userId, javaType=java.lang.String, jdbcType=VARCHAR, mode=IN},
			now()
		 )
	</insert> 	
	
	<insert id="insertDataSync">

		INSERT INTO field (
			field_id,
			field_label,
			active_from_crop_year,
			active_to_crop_year,
			create_user,
			create_date,
			update_user,
			update_date
		) 
		VALUES (
			#{dto.fieldId, javaType=java.lang.Integer , jdbcType=NUMERIC, mode=IN},
			#{dto.fieldLabel, javaType=java.lang.String , jdbcType=VARCHAR, mode=IN},
			#{dto.activeFromCropYear, javaType=java.lang.Integer , jdbcType=NUMERIC, mode=IN},
			#{dto.activeToCropYear, javaType=java.lang.Integer , jdbcType=NUMERIC, mode=IN},
			#{userId, javaType=java.lang.String, jdbcType=VARCHAR, mode=IN},
			now(),
			#{userId, javaType=java.lang.String, jdbcType=VARCHAR, mode=IN},
			now()
		 )
	</insert> 

	<update id="update">
		UPDATE field SET
			field_label = #{dto.fieldLabel, javaType=java.lang.String , jdbcType=VARCHAR, mode=IN}, 
			active_from_crop_year = #{dto.activeFromCropYear, javaType=java.lang.Integer , jdbcType=NUMERIC, mode=IN}, 
			active_to_crop_year = #{dto.activeToCropYear, javaType=java.lang.Integer , jdbcType=NUMERIC, mode=IN}, 
			update_user = #{userId, javaType=java.lang.String, jdbcType=VARCHAR, mode=IN},
			update_date = now()
		 WHERE field_id = #{dto.fieldId, javaType=java.lang.Integer , jdbcType=NUMERIC, mode=IN}
	</update> 

	<delete id="delete">
		DELETE FROM field t WHERE t.field_id = #{fieldId}
	</delete>
	
</mapper>
