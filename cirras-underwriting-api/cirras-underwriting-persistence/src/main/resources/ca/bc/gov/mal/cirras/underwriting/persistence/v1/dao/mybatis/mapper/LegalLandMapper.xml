<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ca.bc.gov.mal.cirras.underwriting.persistence.v1.dao.mybatis.mapper.LegalLandMapper">

	<resultMap id="LegalLandDtoMap" type="ca.bc.gov.mal.cirras.underwriting.persistence.v1.dto.LegalLandDto">
	
		<id property="legalLandId" column="legal_land_id" javaType="java.lang.Integer" jdbcType="NUMERIC" />
	
		<result property="primaryPropertyIdentifier" column="primary_property_identifier" javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="primaryLandIdentifierTypeCode" column="primary_land_identifier_type_code" javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="primaryReferenceTypeCode" column="primary_reference_type_code" javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="legalDescription" column="legal_description" javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="legalShortDescription" column="legal_short_description" javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="otherDescription" column="other_description" javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="activeFromCropYear" column="active_from_crop_year" javaType="java.lang.Integer" jdbcType="NUMERIC" />
		<result property="activeToCropYear" column="active_to_crop_year" javaType="java.lang.Integer" jdbcType="NUMERIC" />
		<result property="totalAcres" column="total_acres" javaType="java.lang.Double" jdbcType="NUMERIC" />

		<result property="createUser" column="create_user" javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="createDate" column="create_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
		<result property="updateUser" column="update_user" javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="updateDate" column="update_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
		
	</resultMap>
	
    <sql id="selectColumns">
		SELECT  ll.legal_land_id,
				ll.primary_property_identifier,
				ll.primary_land_identifier_type_code,
				ll.primary_reference_type_code,
				ll.legal_description,
				ll.legal_short_description,
				ll.other_description,
				ll.active_from_crop_year,
				ll.active_to_crop_year,
				ll.total_acres,
				ll.create_user, 
				ll.create_date, 
				ll.update_user, 
				ll.update_date
    </sql>
	
	<select id="fetchAll" resultMap="LegalLandDtoMap">  
		<include refid="selectColumns"/>
		FROM legal_land ll
		ORDER BY other_description, legal_land_id
	</select> 

	
	<select id="fetch" resultMap="LegalLandDtoMap">
		<include refid="selectColumns"/>
		FROM legal_land ll
		WHERE ll.legal_land_id = #{legalLandId}
	</select>

	<sql id="selectWhereClause">
	  <if test="otherDescription != null">
	  	<choose>
			<when test="wildCardSearch">
				AND (UPPER(ll.other_description) like #{otherDescription}
					<if test="searchByOtherDescOrLegalDesc">
						OR UPPER(ll.legal_description) like #{otherDescription}
					</if>
				)
			</when>
	
			<otherwise>
				AND (UPPER(ll.other_description) = #{otherDescription}
					<if test="searchByOtherDescOrLegalDesc">
						OR UPPER(ll.legal_description) = #{otherDescription}
					</if>
				)
			</otherwise>
		</choose>
	  </if>

	  <if test="primaryPropertyIdentifier != null">
	  	<choose>
			<when test="wildCardSearch">
				AND UPPER(ll.primary_property_identifier) like #{primaryPropertyIdentifier}
			</when>

			<otherwise>
				AND UPPER(ll.primary_property_identifier) = #{primaryPropertyIdentifier}
			</otherwise>
		</choose>
	  </if>

  	  <if test="growerInfo != null">
		AND ll.legal_land_id IN 
		(
			SELECT llfx.legal_land_id
			FROM legal_land_field_xref llfx
			JOIN annual_field_detail afd on afd.field_id = llfx.field_id
			JOIN contracted_field_detail cfd on cfd.annual_field_detail_id = afd.annual_field_detail_id
			JOIN grower_contract_year gcy ON gcy.grower_contract_year_id = cfd.grower_contract_year_id
			JOIN grower g ON g.grower_id = gcy.grower_id
			JOIN grower_contact gc ON gc.grower_id = g.grower_id
			JOIN contact c ON c.contact_id = gc.contact_id
			LEFT JOIN contact_email ce ON ce.contact_id = c.contact_id
			LEFT JOIN contact_phone cp ON cp.contact_id = c.contact_id
			WHERE 
			<choose>
				<when test="wildCardSearch">
					g.grower_number::text like #{growerInfo}
					   OR UPPER(g.grower_name) like #{growerInfo}
					   OR UPPER(ce.email_address) like #{growerInfo}
					   <if test="growerPhoneNumber != null">
							OR cp.phone_number like #{growerPhoneNumber}
					   </if>
				</when>
	
				<otherwise>
					g.grower_number::text = #{growerInfo}
					   OR UPPER(g.grower_name) = #{growerInfo}
					   OR UPPER(ce.email_address) = #{growerInfo}
					   <if test="growerPhoneNumber != null">
							OR cp.phone_number = #{growerPhoneNumber}
					   </if>
				</otherwise>
			</choose>
		)
	  </if>

	  <if test="datasetLandCleanup">
		AND ll.primary_property_identifier ~ '^GF\d+$'
		AND ll.primary_land_identifier_type_code = 'OTHER'
	  </if>
	  
	</sql>

	<sql id="selectOrderBy">
		${orderBy}
	</sql>

	<select id="selectCount" resultType="int">  
		SELECT COUNT(legal_land_id)
		FROM legal_land ll
		WHERE 1 = 1
		<include refid="selectWhereClause"/>
	</select> 

	<select id="select" resultMap="LegalLandDtoMap">
		<include refid="selectColumns"/>
		FROM legal_land ll
		WHERE 1=1
		<include refid="selectWhereClause"/>	
		<include refid="selectOrderBy"/>

		<if test="offset != null and pageRowCount != null">
		    OFFSET #{offset, javaType=java.lang.Integer, jdbcType=INTEGER, mode=IN}
		    LIMIT #{pageRowCount, javaType=java.lang.Integer, jdbcType=INTEGER, mode=IN}
		</if>
	</select>


	<select id="searchOtherLegalLandForField" resultMap="LegalLandDtoMap">  
		SELECT  ll.legal_land_id,
				ll.primary_property_identifier,
				ll.primary_land_identifier_type_code,
				ll.primary_reference_type_code,
				ll.legal_description,
				ll.legal_short_description,
				ll.other_description,
				ll.total_acres
		FROM legal_land ll
		JOIN legal_land_field_xref llx ON llx.legal_land_id = ll.legal_land_id
		WHERE llx.field_id = #{fieldId}
		AND llx.legal_land_id <![CDATA[ <> ]]> #{legalLandId}
		AND #{cropYear} BETWEEN ll.active_from_crop_year AND COALESCE(ll.active_to_crop_year, #{cropYear})	
	</select> 
	
	<select id="getNextPidSequence" statementType="CALLABLE" resultType="java.lang.Integer">
			SELECT nextval('ll_pid_seq')
	</select>
	
	<insert id="insert">
	
		<selectKey keyProperty="legalLandId" resultType="java.lang.Integer" order="BEFORE"> 
			SELECT nextval('ll_seq')
		</selectKey>
	

		INSERT INTO legal_land (
			legal_land_id,
			primary_property_identifier,
			primary_reference_type_code,
			legal_description,
			legal_short_description,
			other_description,
			total_acres,
			primary_land_identifier_type_code,
			active_from_crop_year,
			active_to_crop_year,
			create_user,
			create_date,
			update_user,
			update_date
		) 
		VALUES (
			#{legalLandId},
			#{dto.primaryPropertyIdentifier, javaType=java.lang.String , jdbcType=VARCHAR, mode=IN},
			#{dto.primaryReferenceTypeCode, javaType=java.lang.String , jdbcType=VARCHAR, mode=IN},
			#{dto.legalDescription, javaType=java.lang.String , jdbcType=VARCHAR, mode=IN},
			#{dto.legalShortDescription, javaType=java.lang.String , jdbcType=VARCHAR, mode=IN},
			#{dto.otherDescription, javaType=java.lang.String , jdbcType=VARCHAR, mode=IN},
			#{dto.totalAcres, javaType=java.lang.Double , jdbcType=NUMERIC, mode=IN},
			#{dto.primaryLandIdentifierTypeCode, javaType=java.lang.String , jdbcType=VARCHAR, mode=IN},
			#{dto.activeFromCropYear, javaType=java.lang.Integer , jdbcType=NUMERIC, mode=IN},
			#{dto.activeToCropYear, javaType=java.lang.Integer , jdbcType=NUMERIC, mode=IN},
			#{userId, javaType=java.lang.String, jdbcType=VARCHAR, mode=IN},
			now(),
			#{userId, javaType=java.lang.String, jdbcType=VARCHAR, mode=IN},
			now()
		 )
	</insert> 
	
	<insert id="insertDataSync">

		INSERT INTO legal_land (
			legal_land_id,
			primary_property_identifier,
			primary_reference_type_code,
			legal_description,
			legal_short_description,
			other_description,
			total_acres,
			primary_land_identifier_type_code,
			active_from_crop_year,
			active_to_crop_year,
			create_user,
			create_date,
			update_user,
			update_date
		) 
		VALUES (
			#{dto.legalLandId, javaType=java.lang.Integer , jdbcType=NUMERIC, mode=IN},
			#{dto.primaryPropertyIdentifier, javaType=java.lang.String , jdbcType=VARCHAR, mode=IN},
			#{dto.primaryReferenceTypeCode, javaType=java.lang.String , jdbcType=VARCHAR, mode=IN},
			#{dto.legalDescription, javaType=java.lang.String , jdbcType=VARCHAR, mode=IN},
			#{dto.legalShortDescription, javaType=java.lang.String , jdbcType=VARCHAR, mode=IN},
			#{dto.otherDescription, javaType=java.lang.String , jdbcType=VARCHAR, mode=IN},
			#{dto.totalAcres, javaType=java.lang.Double , jdbcType=NUMERIC, mode=IN},
			#{dto.primaryLandIdentifierTypeCode, javaType=java.lang.String , jdbcType=VARCHAR, mode=IN},
			#{dto.activeFromCropYear, javaType=java.lang.Integer , jdbcType=NUMERIC, mode=IN},
			#{dto.activeToCropYear, javaType=java.lang.Integer , jdbcType=NUMERIC, mode=IN},
			#{userId, javaType=java.lang.String, jdbcType=VARCHAR, mode=IN},
			now(),
			#{userId, javaType=java.lang.String, jdbcType=VARCHAR, mode=IN},
			now()
		 )
	</insert>
	 
	<update id="update">
		UPDATE legal_land SET
			primary_property_identifier = #{dto.primaryPropertyIdentifier, javaType=java.lang.String , jdbcType=VARCHAR, mode=IN}, 
			primary_reference_type_code = #{dto.primaryReferenceTypeCode, javaType=java.lang.String , jdbcType=VARCHAR, mode=IN}, 
			legal_description = #{dto.legalDescription, javaType=java.lang.String , jdbcType=VARCHAR, mode=IN}, 
			legal_short_description = #{dto.legalShortDescription, javaType=java.lang.String , jdbcType=VARCHAR, mode=IN}, 
			other_description = #{dto.otherDescription, javaType=java.lang.String , jdbcType=VARCHAR, mode=IN},
			total_acres = #{dto.totalAcres, javaType=java.lang.Double , jdbcType=NUMERIC, mode=IN}, 
			primary_land_identifier_type_code = #{dto.primaryLandIdentifierTypeCode, javaType=java.lang.String , jdbcType=VARCHAR, mode=IN}, 
			active_from_crop_year = #{dto.activeFromCropYear, javaType=java.lang.Integer , jdbcType=NUMERIC, mode=IN}, 
			active_to_crop_year = #{dto.activeToCropYear, javaType=java.lang.Integer , jdbcType=NUMERIC, mode=IN}, 
			update_user = #{userId, javaType=java.lang.String, jdbcType=VARCHAR, mode=IN},
			update_date = now()
		 WHERE legal_land_id = #{dto.legalLandId, javaType=java.lang.Integer , jdbcType=NUMERIC, mode=IN}
	</update> 

	<delete id="delete">
		DELETE FROM legal_land t WHERE t.legal_land_id = #{legalLandId}
	</delete>
	
</mapper>
